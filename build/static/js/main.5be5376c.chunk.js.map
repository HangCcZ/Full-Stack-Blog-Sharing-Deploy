{"version":3,"sources":["components/Comments.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","services/login.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/Header.js","components/User.js","components/LoginForm.js","services/signup.js","components/SignUpForm.js","components/BlogList.js","components/SortButton.js","components/Pages.js","App.js","store.js","index.js","components/Footer.js"],"names":["Comments","blog","comments","ListGroup","map","comment","Item","key","baseUrl","token","getAll","a","axios","get","response","data","getAllFromUser","userId","blogs","create","newObject","config","headers","Authorization","post","deleteBlog","delete","id","updateLikes","blogObject","userObject","put","userID","updateUnlikes","setToken","newToken","updateComments","errorMessage","message","type","successMessage","notificationReducer","state","messageBody","messageType","action","messageStyle","initializeBlogs","dispatch","blogService","blogReducer","newBlog","updatedBlog","unlikedBlog","unlikedBlogId","updatedBlogComment","filter","CommentForm","addComment","user","useSelector","initialValues","onSubmit","values","resetForm","setSubmitting","Group","Label","username","name","field","Control","as","rows","placeholder","Text","className","href","target","rel","Button","Blog","useDispatch","history","useHistory","useState","showModal","setShowModal","handleClose","handleShow","useEffect","timer","setTimeout","push","clearTimeout","onLikesClick","onUnlikeClick","removeBlog","title","commentBlog","Card","Header","Body","content","images","length","Carousel","indicators","interval","controls","img","url","style","maxHeight","objectFit","src","thumbnail","alt","filename","likes","find","like","variant","onClick","Modal","show","onHide","closeButton","Title","Alert","Footer","Notification","notification","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","setShowSortButton","useImperativeHandle","buttonLabel","children","NewBlogSchema","Yup","shape","min","required","BlogForm","toggleForm","files","setFiles","fileRef","useRef","handleFileChange","e","validationSchema","formData","FormData","file","append","date","Date","now","Object","entries","value","author","current","styleForm","autoComplete","msg","File","label","onChange","multiple","marginRight","marginLeft","login","credentials","loginUser","password","loginService","window","localStorage","setItem","JSON","stringify","userReducer","fetchUsers","usersReducer","users","UserList","Table","striped","to","padding","margins","margin","setSearchTerm","setCurrentPage","location","useLocation","handleLogOut","event","removeItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Link","Form","inline","FormControl","User","indexOfFirstPost","indexOfLastPost","setTotalBlogs","slice","dayjs","fromNow","LoginForm","onFormSubmit","marginTop","isSubmitting","signUp","SignupSchema","max","confirmPassword","validatePasswords","errors","SignUpForm","validate","signUpService","newUser","extend","relativeTime","BlogList","sortBy","searchTerm","sortByNewest","sort","b","sortedBlogs","sortBlogs","matchedBlogs","toLowerCase","includes","resultBlogs","Badge","renderUserLink","renderTableData","SortButton","showSortButton","setSortBy","DropdownButton","Dropdown","Pages","postsPerPage","totalPosts","currentPage","items","number","Math","ceil","Pagination","active","text","App","match","useRouteMatch","matchBlog","individualUser","params","individualBlog","blogFormRef","totalBlogs","loggedUserJSON","getItem","parse","userFromToken","usersService","onFormCancle","Container","flex","path","exact","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","color","document","getElementById"],"mappings":"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","file":"static/js/main.5be5376c.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nconst Comments = ({ blog }) => {\r\n  if (!blog.comments) {\r\n    return null\r\n  }\r\n  return (\r\n    <>\r\n      <ListGroup>\r\n        {blog.comments.map((comment) => (\r\n          <ListGroup.Item key={comment}>\r\n            <ReactMarkdown>{comment}</ReactMarkdown>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\nconst userUrl = \"/api/users\";\r\n\r\nlet token = null;\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\n// send request to api/user/id\r\n// get all blogs corresponding to current user\r\nconst getAllFromUser = async (userId) => {\r\n  const response = await axios.get(`${userUrl}/${userId}`);\r\n\r\n  return response.data.blogs;\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token, \"Content-Type\": \"multipart/form-data\" },\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.delete(`${baseUrl}/${newObject.id}`, config);\r\n  return response;\r\n};\r\n\r\nconst updateLikes = async (blogObject, userObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(\r\n    `${baseUrl}/${blogObject.id}/like`,\r\n    { userID: userObject.id },\r\n    config\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateUnlikes = async (blogObject, userObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(\r\n    `${baseUrl}/${blogObject.id}/unlike`,\r\n    { userID: userObject.id },\r\n    config\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateComments = async (comment, blogObject) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {\r\n    comment,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  getAllFromUser,\r\n  setToken,\r\n  create,\r\n  updateLikes,\r\n  deleteBlog,\r\n  updateComments,\r\n  updateUnlikes,\r\n};\r\n","const notificationReducer = (\r\n  state = { messageBody: \"\", messageType: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"success\" }\r\n    case \"FAIL_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"warning\" }\r\n    case \"INFO_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"info\" }\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { messageBody: \"\", messageType: \"\" }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (message) => {\r\n  return {\r\n    type: \"FAIL_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const successMessage = (message) => {\r\n  return {\r\n    type: \"SUCCESS_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const infoMessage = (message) => {\r\n  return {\r\n    type: \"INFO_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import blogService from \"../services/blogs\";\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\";\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data.blogs;\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data.newBlog];\r\n    case \"LIKE_BLOG\":\r\n      const updatedBlog = action.data.updatedBlog;\r\n      const id = updatedBlog.id;\r\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog));\r\n    case \"UNLIKE_BLOG\":\r\n      const unlikedBlog = action.data.updatedBlog;\r\n      const unlikedBlogId = unlikedBlog.id;\r\n      return state.map((blog) =>\r\n        blog.id !== unlikedBlogId ? blog : unlikedBlog\r\n      );\r\n    case \"COMMENT_BLOG\":\r\n      const updatedBlogComment = action.data.updatedBlog;\r\n      return state.map((blog) =>\r\n        blog.id !== updatedBlogComment.id ? blog : updatedBlogComment\r\n      );\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data.id);\r\n    case \"CLEAR_BLOGS\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const commentBlog = (blogObject, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateComments(blogObject, comment);\r\n    dispatch({\r\n      type: \"COMMENT_BLOG\",\r\n      data: { updatedBlog },\r\n    });\r\n  };\r\n};\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newBlog = await blogService.create(blogObject);\r\n      dispatch({\r\n        type: \"NEW_BLOG\",\r\n        data: { newBlog },\r\n      });\r\n      dispatch(\r\n        successMessage(\r\n          `a new blog ${newBlog.title} by ${newBlog.author} created`\r\n        )\r\n      );\r\n      setTimeout(() => {\r\n        dispatch(clearMessage());\r\n      }, 3000);\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`Error creating a new blog ${exception}`));\r\n    }\r\n  };\r\n};\r\n\r\nexport const likeBlog = (blogObject, userObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedBlog = await blogService.updateLikes(blogObject, userObject);\r\n      dispatch({\r\n        type: \"LIKE_BLOG\",\r\n        data: { updatedBlog },\r\n      });\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error updating the vlog, error:${exception}`));\r\n      setTimeout(() => {\r\n        dispatch(clearMessage());\r\n      }, 3000);\r\n    }\r\n  };\r\n};\r\n\r\n// @TODO\r\nexport const unlikeBlog = (blogObject, userObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedBlog = await blogService.updateUnlikes(\r\n        blogObject,\r\n        userObject\r\n      );\r\n      dispatch({\r\n        type: \"UNLIKE_BLOG\",\r\n        data: { updatedBlog },\r\n      });\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error updating the vlog, error:${exception}`));\r\n      setTimeout(() => {\r\n        dispatch(clearMessage());\r\n      }, 3000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await blogService.deleteBlog(blogObject);\r\n      dispatch(\r\n        successMessage(`The blog ${blogObject.title} has been deleted.`)\r\n      );\r\n      dispatch({\r\n        type: \"DELETE_BLOG\",\r\n        data: { id: blogObject.id },\r\n      });\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error deleting the vlog, error: ${exception}`));\r\n      setTimeout(() => {\r\n        dispatch(clearMessage());\r\n      }, 3000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll();\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: { blogs },\r\n    });\r\n  };\r\n};\r\n\r\nexport const clearBlogs = () => {\r\n  return {\r\n    type: \"CLEAR_BLOGS\",\r\n  };\r\n};\r\n\r\nexport default blogReducer;\r\n","import React from \"react\";\r\nimport { Form as styleForm, Button } from \"react-bootstrap\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nconst CommentForm = ({ addComment }) => {\r\n  const user = useSelector((state) => state.user);\r\n  return (\r\n    <Formik\r\n      initialValues={{ comment: \"\" }}\r\n      onSubmit={(values, { resetForm, setSubmitting }) => {\r\n        setSubmitting(true);\r\n        addComment(values.comment);\r\n        resetForm({ values: { comment: \"\" } });\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n          <styleForm.Group>\r\n            <styleForm.Label>{`Comment as ${user.username}`}:</styleForm.Label>\r\n            <Field name=\"comment\">\r\n              {({ field }) => (\r\n                <styleForm.Control\r\n                  as=\"textarea\"\r\n                  rows={4}\r\n                  {...field}\r\n                  placeholder=\"What are your thoughts?\"\r\n                ></styleForm.Control>\r\n              )}\r\n            </Field>\r\n            <styleForm.Text className=\"text-muted\">\r\n              Please follow the community's rule! This application supports{` `}\r\n              <a\r\n                href=\"https://www.markdownguide.org/basic-syntax/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                markdown syntax\r\n              </a>\r\n              , try it out!\r\n            </styleForm.Text>\r\n          </styleForm.Group>\r\n          <Button type=\"submit\" id=\"create-comment\">\r\n            COMMENT\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Comments from \"./Comments\";\r\nimport { commentBlog } from \"../reducers/blogReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport { Button, Card, Carousel, Modal, Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { deleteBlog, likeBlog, unlikeBlog } from \"../reducers/blogReducer\";\r\nconst Blog = ({ blog }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = () => setShowModal(true);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [user, history]);\r\n\r\n  if (!blog) {\r\n    return null;\r\n  }\r\n\r\n  const onLikesClick = () => {\r\n    // dispatch(likeBlog(blog));\r\n    dispatch(likeBlog(blog, user));\r\n  };\r\n\r\n  const onUnlikeClick = () => {\r\n    dispatch(unlikeBlog(blog, user));\r\n  };\r\n\r\n  const removeBlog = () => {\r\n    dispatch(deleteBlog(blog));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const displayModal = () => {\r\n    return (\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title as=\"h4\">{`Delete`}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Alert variant=\"danger\">\r\n            Do you want to delete this blog? This process cannot be undone.\r\n          </Alert>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            No! Take me back!\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={removeBlog}>\r\n            Yes Sir!\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(commentBlog(comment, blog));\r\n  };\r\n\r\n  const showRemove = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={handleShow}\r\n            className=\"delete-button\"\r\n          >\r\n            DELETE\r\n          </Button>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const showEdit = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button variant=\"info\">Edit</Button>{\" \"}\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const showLike = () => {\r\n    if (blog.likes.find((like) => like.username === user.username)) {\r\n      return (\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={onUnlikeClick}\r\n          className=\"likeButton\"\r\n        >\r\n          UNLIKE\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button variant=\"success\" onClick={onLikesClick} className=\"likeButton\">\r\n          LIKE\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCarousel = () => {\r\n    if (blog.images.length !== 0) {\r\n      return (\r\n        <Carousel\r\n          indicators={false}\r\n          interval={3000}\r\n          controls={blog.images.length === 1 ? false : true}\r\n        >\r\n          {blog.images.map((img) => (\r\n            <Carousel.Item key={img.url}>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                style={{ maxHeight: \"25rem\", objectFit: \"contain\" }}\r\n                src={img.thumbnail}\r\n                alt={img.filename}\r\n              />\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const blogDetail = () => {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Header>{blog.title}</Card.Header>\r\n          <Card.Body>\r\n            <ReactMarkdown>{blog.content}</ReactMarkdown>\r\n          </Card.Body>\r\n          <Card.Body>{renderCarousel()}</Card.Body>\r\n          <Card.Body>\r\n            <Card.Text>\r\n              {blog.likes.length} likes {showLike()}\r\n              {showRemove()}\r\n            </Card.Text>\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <CommentForm blog={blog} addComment={addComment} />\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <Comments blog={blog} />\r\n          </Card.Body>\r\n        </Card>\r\n        {displayModal()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return blogDetail();\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nconst Notification = () => {\r\n  const { messageBody, messageStyle } = useSelector(\r\n    (state) => state.notification\r\n  )\r\n\r\n  if (messageBody === \"\") {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Alert key={messageBody} variant={messageStyle}>\r\n      {messageBody}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  // visible = true: then show the form\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    props.setShowSortButton(visible)\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n      visible,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility} id='showForm'>\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>{props.children}</div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","/* eslint-disable indent */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { Button, Form as styleForm, Alert } from \"react-bootstrap\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createBlog } from \"../reducers/blogReducer\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst NewBlogSchema = Yup.object().shape({\r\n  title: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  content: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n});\r\n\r\nconst BlogForm = ({ toggleForm }) => {\r\n  const dispatch = useDispatch();\r\n  const [files, setFiles] = useState(null);\r\n  const fileRef = useRef(null);\r\n  const handleFileChange = (e) => {\r\n    setFiles(e.target.files);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert variant=\"primary\">\r\n        <h2>CREATE</h2>\r\n      </Alert>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          title: \"\",\r\n\r\n          content: \"\",\r\n        }}\r\n        validationSchema={NewBlogSchema}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          setSubmitting(true);\r\n\r\n          const formData = new FormData();\r\n          for (const file in files) {\r\n            formData.append(\"files\", files[file]);\r\n          }\r\n\r\n          const newBlog = {\r\n            title: values.title,\r\n\r\n            content: values.content,\r\n            date: Date.now(),\r\n          };\r\n\r\n          for (const [key, value] of Object.entries(newBlog)) {\r\n            formData.append(key, value);\r\n          }\r\n\r\n          dispatch(createBlog(formData));\r\n          setSubmitting(false);\r\n          setFiles(null);\r\n          fileRef.current.value = \"\";\r\n          resetForm({\r\n            values: {\r\n              title: \"\",\r\n\r\n              content: \"\",\r\n            },\r\n          });\r\n          toggleForm();\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Title:</styleForm.Label>\r\n              <Field\r\n                name=\"title\"\r\n                type=\"input\"\r\n                as={styleForm.Control}\r\n                autoComplete=\"off\"\r\n              />\r\n              <ErrorMessage name=\"title\">\r\n                {(msg) => <Alert variant=\"warning\">{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Content:</styleForm.Label>\r\n              <Field name=\"content\">\r\n                {({ field }) => (\r\n                  <styleForm.Control\r\n                    as=\"textarea\"\r\n                    rows={4}\r\n                    {...field}\r\n                  ></styleForm.Control>\r\n                )}\r\n              </Field>\r\n              <ErrorMessage name=\"content\">\r\n                {(msg) => <Alert variant=\"warning\">{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.File\r\n                id=\"image\"\r\n                label=\"Upload images\"\r\n                onChange={handleFileChange}\r\n                ref={fileRef}\r\n                multiple\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                variant=\"secondary\"\r\n                id=\"cancel-button\"\r\n                onClick={toggleForm}\r\n                style={{ marginRight: \"auto\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                id=\"create-button\"\r\n                type=\"submit\"\r\n                style={{ marginLeft: \"auto\" }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogForm;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport { initializeBlogs } from \"./blogReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nfunction userReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return action.data.user\r\n    case \"TOKEN_USER\":\r\n      return action.data.user\r\n    case \"SIGNOUT\":\r\n      return null\r\n    case \"FAIL\":\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: \"SUCCESS\",\r\n        data: { user },\r\n      })\r\n      dispatch(successMessage(`User ${user.username} logged in`))\r\n      dispatch(initializeBlogs())\r\n    } catch (exception) {\r\n      dispatch({ type: \"FAIL\" })\r\n      dispatch(errorMessage(\"Wrong username or password\"))\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 2000)\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"SIGNOUT\",\r\n  }\r\n}\r\n\r\nexport const userFromToken = (user) => {\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: \"TOKEN_USER\",\r\n    data: { user },\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { fetchUsers }\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.data.users\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.fetchUsers()\r\n    dispatch({\r\n      type: \"FETCH_ALL\",\r\n      data: { users },\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nconst UserList = () => {\r\n  const users = useSelector((state) => state.users)\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <tr key={user.id}>\r\n        <td>\r\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n        </td>\r\n\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Number of blogs posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderUsers()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Navbar, Nav, Form, FormControl } from \"react-bootstrap\";\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearBlogs } from \"../reducers/blogReducer\";\r\nimport { logoutUser } from \"../reducers/userReducer\";\r\nimport { clearMessage, infoMessage } from \"../reducers/notificationReducer\";\r\nconst padding = {\r\n  padding: 5,\r\n};\r\n\r\nconst margins = {\r\n  margin: 5,\r\n};\r\n\r\nconst Header = ({ setSearchTerm, setCurrentPage }) => {\r\n  const user = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogOut = async (event) => {\r\n    const username = user.username;\r\n    window.localStorage.removeItem(\"loggedBlogUser\");\r\n    history.push(\"/\");\r\n    dispatch(logoutUser());\r\n    dispatch(clearBlogs());\r\n    dispatch(infoMessage(`User ${username} logged out`));\r\n    setTimeout(() => {\r\n      dispatch(clearMessage());\r\n    }, 3000);\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n        <Navbar.Brand>\r\n          <Link style={padding} to=\"/\">\r\n            HIFORUM\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\"></Nav>\r\n\r\n          {location.pathname === \"/signup\" ? (\r\n            <Nav className=\"justify-content-end\">\r\n              <Nav.Link as={Link} to=\"/\">\r\n                Sign in\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className=\"justify-content-end\">\r\n              <Nav.Link as={Link} to=\"/signup\">\r\n                Sign up\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n\r\n  const renderLoginMessage = () => {\r\n    return (\r\n      <Navbar.Text>\r\n        Hi, {user.username}\r\n        <Button variant=\"secondary\" style={margins} onClick={handleLogOut}>\r\n          Sign out\r\n        </Button>\r\n      </Navbar.Text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n      <Navbar.Brand>\r\n        <Link style={padding} to=\"/\">\r\n          HIFORUM\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav>\r\n          <Nav.Link as={Link} to=\"/\">\r\n            HOME\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to={`/users/${user.id}`}>\r\n            MY POSTS\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Form inline style={{ margin: \"0 auto\" }}>\r\n          {location.pathname === \"/\" ? (\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={(event) => {\r\n                setSearchTerm(event.target.value);\r\n                setCurrentPage(1);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </Form>\r\n        <Nav> {renderLoginMessage()}</Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport dayjs from \"dayjs\";\r\nconst User = ({ user, indexOfFirstPost, indexOfLastPost, setTotalBlogs }) => {\r\n  useEffect(() => {\r\n    setTotalBlogs(user ? user.blogs.length : 0);\r\n  }, [user, setTotalBlogs]);\r\n\r\n  if (!user) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  const renderBlogs = () => {\r\n    const blogLists = user.blogs\r\n      .slice(indexOfFirstPost, indexOfLastPost)\r\n      .map((blog) => (\r\n        <tr key={blog.id}>\r\n          <td>\r\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n          </td>\r\n          <td>{` ${dayjs(blog.date).fromNow()}`}</td>\r\n        </tr>\r\n      ));\r\n    return blogLists;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`All Blogs By ${user.username}`}</h2>\r\n\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>BLOG</th>\r\n            <th>DATE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderBlogs()}</tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { loginUser } from \"../reducers/userReducer\"\r\nimport { Formik, Field, Form } from \"formik\"\r\n\r\nconst LoginForm = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmit = async (values, { resetForm, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    dispatch(loginUser(values.username, values.password))\r\n    setSubmitting(false)\r\n    if (user === null) {\r\n      resetForm({ values: { username: values.username, password: \"\" } })\r\n    } else {\r\n      resetForm({ values: { username: \"\", password: \"\" } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ values, isSubmitting }) => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field name='username' type='input' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field name='password' type='password' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Sign in\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }\r\n","import React from \"react\";\r\nimport signUpService from \"../services/signup\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { Form as styleForm, Button, Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"../reducers/notificationReducer\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nconst validatePasswords = (values) => {\r\n  const errors = {};\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = \"Must be the same as password above\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validate={validatePasswords}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n          if (values.password === values.confirmPassword) {\r\n            try {\r\n              setSubmitting(true);\r\n              const newUser = await signUpService.signUp({\r\n                username: values.username,\r\n                password: values.password,\r\n              });\r\n              dispatch(\r\n                successMessage(`New user ${newUser.username} signed up`)\r\n              );\r\n              setTimeout(() => {\r\n                dispatch(clearMessage());\r\n              }, 3000);\r\n              setSubmitting(false);\r\n              resetForm({\r\n                values: {\r\n                  username: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\",\r\n                },\r\n              });\r\n              history.push(\"/\");\r\n            } catch (err) {\r\n              dispatch(errorMessage(err));\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field\r\n                name=\"username\"\r\n                type=\"input\"\r\n                as={styleForm.Control}\r\n                autoComplete=\"off\"\r\n              />\r\n\r\n              <ErrorMessage name=\"username\">\r\n                {(msg) => <Alert variant=\"warning\">{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                as={styleForm.Control}\r\n                autoComplete=\"off\"\r\n              />\r\n              <ErrorMessage name=\"password\">\r\n                {(msg) => <Alert variant=\"warning\">{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Confirm Password:</styleForm.Label>\r\n              <Field\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                as={styleForm.Control}\r\n                autoComplete=\"off\"\r\n              />\r\n              <ErrorMessage name=\"confirmPassword\">\r\n                {(msg) => <Alert variant=\"warning\">{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { Table, Badge } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nconst BlogList = ({\r\n  sortBy,\r\n  searchTerm = \"\",\r\n  indexOfFirstPost,\r\n  indexOfLastPost,\r\n  setTotalBlogs,\r\n}) => {\r\n  const blogs = useSelector((state) => state.blogs);\r\n\r\n  const sortByMostLikes = () => {\r\n    return [...blogs].sort((a, b) => b.likes.length - a.likes.length);\r\n  };\r\n\r\n  const sortByLeastLikes = () => {\r\n    return [...blogs].sort((a, b) => a.likes.length - b.likes.length);\r\n  };\r\n\r\n  const sortByOldest = () => {\r\n    return [...blogs].sort((a, b) => a.date - b.date);\r\n  };\r\n\r\n  const sortByNewest = () => {\r\n    return [...blogs].sort((a, b) => b.date - a.date);\r\n  };\r\n\r\n  const sortBlogs = () => {\r\n    switch (sortBy) {\r\n      case \"Newest to Oldest\":\r\n        return sortByNewest();\r\n      case \"Oldest to Newest\":\r\n        return sortByOldest();\r\n      case \"Least to Most Likes\":\r\n        return sortByLeastLikes();\r\n      case \"Most to Least Likes\":\r\n        return sortByMostLikes();\r\n      default:\r\n        return sortByNewest();\r\n    }\r\n  };\r\n\r\n  // can be refactored\r\n  const sortedBlogs = sortBlogs();\r\n  const matchedBlogs = sortedBlogs.filter((blog) =>\r\n    blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const renderUserLink = ({ user }) => {\r\n    return <Link to={`/users/${user.id}`}>{user.username}</Link>;\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    let resultBlogs = searchTerm !== \"\" ? matchedBlogs : sortedBlogs;\r\n    return [...resultBlogs]\r\n      .slice(indexOfFirstPost, indexOfLastPost)\r\n      .map((blog) => (\r\n        <tr key={blog.id}>\r\n          <td>\r\n            <Badge variant=\"light\">{blog.likes.length} LIKES</Badge>\r\n          </td>\r\n          <td>\r\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n          </td>\r\n\r\n          <td>\r\n            Posted by {renderUserLink(blog)}\r\n            {` ${dayjs(blog.date).fromNow()}`}\r\n          </td>\r\n        </tr>\r\n      ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalBlogs(matchedBlogs.length);\r\n  }, [matchedBlogs.length, setTotalBlogs]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table striped>\r\n          <tbody>{renderTableData()}</tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import React from \"react\"\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\"\r\nimport \"../index.css\"\r\nconst SortButton = ({ showSortButton, setSortBy, sortBy }) => {\r\n  return (\r\n    <div className={showSortButton === true ? \"displaySortButton\" : \"hide\"}>\r\n      <DropdownButton\r\n        id='dropdown-basic-button'\r\n        title={`SORT BY: ${sortBy}`}\r\n        variant='dark'\r\n      >\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Newest to Oldest\")\r\n          }}\r\n        >\r\n          Newest to Oldest\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Oldest to Newest\")\r\n          }}\r\n        >\r\n          Oldest to Newest\r\n        </Dropdown.Item>\r\n\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Least to Most Likes\")\r\n          }}\r\n        >\r\n          Least Likes to Most Likes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Most to Least Likes\")\r\n          }}\r\n        >\r\n          Most Likes to Least Likes\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortButton\r\n","import React from \"react\"\r\nimport { Pagination } from \"react-bootstrap\"\r\nconst Pages = ({ postsPerPage, totalPosts, currentPage, setCurrentPage }) => {\r\n  const items = []\r\n  for (\r\n    let number = 1;\r\n    number <= Math.ceil(totalPosts / postsPerPage);\r\n    number++\r\n  ) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === currentPage}\r\n        onClick={(e) => {\r\n          setCurrentPage(e.target.text)\r\n        }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pagination>{items}</Pagination>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pages\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport Notification from \"./components/Notification\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { initializeBlogs } from \"./reducers/blogReducer\"\r\n\r\nimport { userFromToken } from \"./reducers/userReducer\"\r\nimport { fetchAllUsers } from \"./reducers/usersReducer\"\r\n\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\"\r\nimport UserList from \"./components/UserList\"\r\nimport Header from \"./components/Header\"\r\nimport User from \"./components/User\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport SignUpForm from \"./components/SignUpForm\"\r\nimport BlogList from \"./components/BlogList\"\r\nimport SortButon from \"./components/SortButton\"\r\nimport Pages from \"./components/Pages\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport \"./index.css\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\n\r\ndayjs.extend(relativeTime)\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  const user = useSelector((state) => state.user)\r\n  const users = useSelector((state) => state.users)\r\n\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const matchBlog = useRouteMatch(\"/blogs/:id\")\r\n  const individualUser = match\r\n    ? users.find((user) => user.id === match.params.id)\r\n    : null\r\n  const individualBlog = matchBlog\r\n    ? blogs.find((blog) => blog.id === matchBlog.params.id)\r\n    : null\r\n\r\n  const blogFormRef = useRef()\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [showSortButton, setShowSortButton] = useState(true)\r\n  const [sortBy, setSortBy] = useState(\"Newest to Oldest\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [postsPerPage] = useState(10)\r\n  const [totalBlogs, setTotalBlogs] = useState(blogs.length)\r\n  const indexOfLastPost = currentPage * postsPerPage\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(userFromToken(user))\r\n      dispatch(initializeBlogs())\r\n      dispatch(fetchAllUsers())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const onFormCancle = () => {\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable\r\n      buttonLabel='CREATE POST'\r\n      className='newBlogToggle'\r\n      ref={blogFormRef}\r\n      setShowSortButton={setShowSortButton}\r\n    >\r\n      <div>\r\n        <BlogForm toggleForm={onFormCancle} />\r\n      </div>\r\n    </Togglable>\r\n  )\r\n\r\n  const showAllBlogs = () => (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <div className={showSortButton === true ? \"showFlexButtons\" : \"\"}>\r\n        <SortButon\r\n          showSortButton={showSortButton}\r\n          setSortBy={setSortBy}\r\n          sortBy={sortBy}\r\n        />\r\n        {blogForm()}\r\n      </div>\r\n\r\n      <BlogList\r\n        sortBy={sortBy}\r\n        indexOfFirstPost={indexOfFirstPost}\r\n        indexOfLastPost={indexOfLastPost}\r\n        searchTerm={searchTerm}\r\n        setTotalBlogs={setTotalBlogs}\r\n      />\r\n      <Pages\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={totalBlogs}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const renderUserList = () => (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserPanel = () => (\r\n    <div>\r\n      <User\r\n        user={individualUser}\r\n        sortBy={sortBy}\r\n        indexOfFirstPost={indexOfFirstPost}\r\n        indexOfLastPost={indexOfLastPost}\r\n        searchTerm={searchTerm}\r\n        setTotalBlogs={setTotalBlogs}\r\n      />\r\n      <Pages\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={totalBlogs}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const renderSingleBlog = () => (\r\n    <div>\r\n      <Blog blog={individualBlog} user={user} />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className='content'>\r\n      <Header setSearchTerm={setSearchTerm} setCurrentPage={setCurrentPage} />\r\n      <Container style={{ flex: \"1 0 auto\" }}>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path='/users/:id'>{renderUserPanel()}</Route>\r\n\r\n          <Route exact path='/users'>\r\n            {renderUserList()}\r\n          </Route>\r\n\r\n          <Route path='/blogs/:id'>{renderSingleBlog()}</Route>\r\n          <Route path='/signup'>\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            {user === null ? <LoginForm /> : showAllBlogs()}\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport Footer from \"./components/Footer\"\r\nReactDOM.render(\r\n  [\r\n    <Provider store={store} key='1'>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>,\r\n    <Footer key='2' />,\r\n  ],\r\n  document.getElementById(\"root\")\r\n)\r\n","import React from \"react\"\r\nimport \"../index.css\"\r\nexport default function Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <a\r\n        href='https://github.com/HangCcZ'\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        style={{ color: \"inherit\" }}\r\n      >\r\n        Designed and Developed by Hang Chen\r\n      </a>\r\n    </footer>\r\n  )\r\n}\r\n"],"sourceRoot":""}