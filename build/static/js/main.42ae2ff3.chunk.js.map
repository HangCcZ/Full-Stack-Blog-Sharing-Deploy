{"version":3,"sources":["components/Comments.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","services/login.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/Header.js","components/User.js","components/LoginForm.js","services/signup.js","components/SignUpForm.js","components/BlogList.js","components/SortButton.js","components/Pages.js","App.js","store.js","index.js","components/Footer.js"],"names":["Comments","blog","comments","ListGroup","map","comment","Item","key","baseUrl","token","getAll","a","axios","get","response","data","getAllFromUser","userId","blogs","create","newObject","config","headers","Authorization","post","deleteBlog","delete","id","setToken","newToken","updateLikes","put","updateComments","blogObject","errorMessage","message","type","successMessage","notificationReducer","state","messageBody","messageType","action","messageStyle","initializeBlogs","dispatch","blogService","blogReducer","newBlog","updatedBlog","updatedBlogComment","filter","CommentForm","addComment","user","useSelector","initialValues","onSubmit","values","resetForm","setSubmitting","Group","Label","name","field","Control","as","rows","placeholder","Text","className","href","target","rel","Button","Blog","useDispatch","history","useHistory","useState","showModal","setShowModal","handleClose","handleShow","login","useEffect","timer","setTimeout","push","clearTimeout","onLikesClick","removeBlog","title","commentBlog","Card","Header","Body","content","images","length","Carousel","indicators","interval","controls","img","url","style","maxHeight","objectFit","src","thumbnail","alt","filename","likes","variant","onClick","Modal","show","onHide","closeButton","Title","Alert","Footer","Notification","notification","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","setShowSortButton","useImperativeHandle","buttonLabel","children","NewBlogSchema","Yup","shape","min","required","author","BlogForm","toggleForm","files","setFiles","fileRef","useRef","handleFileChange","e","validationSchema","formData","FormData","file","append","date","Date","now","Object","entries","value","current","styleForm","autoComplete","msg","File","label","onChange","multiple","marginRight","marginLeft","credentials","loginUser","username","password","loginService","window","localStorage","setItem","JSON","stringify","userReducer","fetchUsers","usersReducer","users","UserList","Table","striped","to","padding","margins","margin","setSearchTerm","setCurrentPage","location","useLocation","handleLogOut","event","removeItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Link","Form","inline","FormControl","User","indexOfFirstPost","indexOfLastPost","setTotalBlogs","slice","dayjs","fromNow","LoginForm","onFormSubmit","marginTop","isSubmitting","signUp","SignupSchema","max","confirmPassword","validatePasswords","errors","SignUpForm","validate","signUpService","newUser","extend","relativeTime","BlogList","sortBy","searchTerm","sortByNewest","sort","b","sortedBlogs","sortBlogs","matchedBlogs","toLowerCase","includes","resultBlogs","Badge","renderUserLink","renderTableData","SortButton","showSortButton","setSortBy","DropdownButton","Dropdown","Pages","postsPerPage","totalPosts","currentPage","items","number","Math","ceil","Pagination","active","text","App","match","useRouteMatch","matchBlog","individualUser","find","params","individualBlog","blogFormRef","totalBlogs","loggedUserJSON","getItem","parse","userFromToken","usersService","onFormCancle","Container","flex","path","exact","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","color","document","getElementById"],"mappings":"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","file":"static/js/main.42ae2ff3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nconst Comments = ({ blog }) => {\r\n  if (!blog.comments) {\r\n    return null\r\n  }\r\n  return (\r\n    <>\r\n      <ListGroup>\r\n        {blog.comments.map((comment) => (\r\n          <ListGroup.Item key={comment}>\r\n            <ReactMarkdown>{comment}</ReactMarkdown>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/blogs\"\r\nconst userUrl = \"/api/users\"\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\n// send request to api/user/id\r\n// get all blogs corresponding to current user\r\nconst getAllFromUser = async (userId) => {\r\n  const response = await axios.get(`${userUrl}/${userId}`)\r\n\r\n  return response.data.blogs\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token, \"Content-Type\": \"multipart/form-data\" },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${newObject.id}`, config)\r\n  return response\r\n}\r\n\r\nconst updateLikes = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.id}`,\r\n    newObject,\r\n    config\r\n  )\r\n  return response.data\r\n}\r\n\r\nconst updateComments = async (comment, blogObject) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {\r\n    comment,\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getAllFromUser,\r\n  setToken,\r\n  create,\r\n  updateLikes,\r\n  deleteBlog,\r\n  updateComments,\r\n}\r\n","const notificationReducer = (\r\n  state = { messageBody: \"\", messageType: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"success\" }\r\n    case \"FAIL_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"warning\" }\r\n    case \"INFO_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"info\" }\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { messageBody: \"\", messageType: \"\" }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (message) => {\r\n  return {\r\n    type: \"FAIL_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const successMessage = (message) => {\r\n  return {\r\n    type: \"SUCCESS_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const infoMessage = (message) => {\r\n  return {\r\n    type: \"INFO_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import blogService from \"../services/blogs\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data.blogs\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data.newBlog]\r\n    case \"LIKE_BLOG\":\r\n      const updatedBlog = action.data.updatedBlog\r\n      const id = updatedBlog.id\r\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\r\n    case \"COMMENT_BLOG\":\r\n      const updatedBlogComment = action.data.updatedBlog\r\n      return state.map((blog) =>\r\n        blog.id !== updatedBlogComment.id ? blog : updatedBlogComment\r\n      )\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data.id)\r\n    case \"CLEAR_BLOGS\":\r\n      return []\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const commentBlog = (blogObject, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateComments(blogObject, comment)\r\n    dispatch({\r\n      type: \"COMMENT_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newBlog = await blogService.create(blogObject)\r\n      dispatch({\r\n        type: \"NEW_BLOG\",\r\n        data: { newBlog },\r\n      })\r\n      dispatch(\r\n        successMessage(\r\n          `a new blog ${newBlog.title} by ${newBlog.author} created`\r\n        )\r\n      )\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`Error creating a new blog ${exception}`))\r\n    }\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedBlog = await blogService.updateLikes(blogObject)\r\n      dispatch({\r\n        type: \"LIKE_BLOG\",\r\n        data: { updatedBlog },\r\n      })\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error updating the vlog, error:${exception}`))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await blogService.deleteBlog(blogObject)\r\n      dispatch(successMessage(`The blog ${blogObject.title} has been deleted.`))\r\n      dispatch({\r\n        type: \"DELETE_BLOG\",\r\n        data: { id: blogObject.id },\r\n      })\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error deleting the vlog, error: ${exception}`))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: { blogs },\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearBlogs = () => {\r\n  return {\r\n    type: \"CLEAR_BLOGS\",\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import React from \"react\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { Formik, Field, Form } from \"formik\"\r\nimport { useSelector } from \"react-redux\"\r\nconst CommentForm = ({ addComment }) => {\r\n  const user = useSelector((state) => state.user)\r\n  return (\r\n    <Formik\r\n      initialValues={{ comment: \"\" }}\r\n      onSubmit={(values, { resetForm, setSubmitting }) => {\r\n        setSubmitting(true)\r\n        addComment(values.comment)\r\n        resetForm({ values: { comment: \"\" } })\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n          <styleForm.Group>\r\n            <styleForm.Label>{`Comment as ${user.name}`}:</styleForm.Label>\r\n            <Field name='comment'>\r\n              {({ field }) => (\r\n                <styleForm.Control\r\n                  as='textarea'\r\n                  rows={4}\r\n                  {...field}\r\n                  placeholder='What are your thoughts?'\r\n                ></styleForm.Control>\r\n              )}\r\n            </Field>\r\n            <styleForm.Text className='text-muted'>\r\n              Please follow the community's rule! This application supports{` `}\r\n              <a\r\n                href='https://www.markdownguide.org/basic-syntax/'\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n              >\r\n                markdown syntax\r\n              </a>\r\n              , try it out!\r\n            </styleForm.Text>\r\n          </styleForm.Group>\r\n          <Button type='submit' id='create-comment'>\r\n            COMMENT\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Comments from \"./Comments\"\r\nimport { commentBlog } from \"../reducers/blogReducer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport CommentForm from \"./CommentForm\"\r\nimport { Button, Card, Carousel, Modal, Alert } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { deleteBlog, likeBlog } from \"../reducers/blogReducer\"\r\nconst Blog = ({ blog, user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const handleClose = () => setShowModal(false)\r\n  const handleShow = () => setShowModal(true)\r\n  const login = useSelector((state) => state.user)\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (!login) {\r\n        history.push(\"/\")\r\n      }\r\n    }, 1000)\r\n    return () => clearTimeout(timer)\r\n  }, [login, history])\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const onLikesClick = () => {\r\n    dispatch(likeBlog(blog))\r\n  }\r\n\r\n  const removeBlog = () => {\r\n    dispatch(deleteBlog(blog))\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const displayModal = () => {\r\n    return (\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title as='h4'>{`Delete`}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Alert variant='danger'>\r\n            Do you want to delete this blog? This process cannot be undone.\r\n          </Alert>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            No! Take me back!\r\n          </Button>\r\n          <Button variant='danger' onClick={removeBlog}>\r\n            Yes Sir!\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(commentBlog(comment, blog))\r\n  }\r\n\r\n  const showRemove = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button\r\n            variant='danger'\r\n            onClick={handleShow}\r\n            className='delete-button'\r\n          >\r\n            DELETE\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const renderCarousel = () => {\r\n    if (blog.images.length !== 0) {\r\n      return (\r\n        <Carousel\r\n          indicators={false}\r\n          interval={3000}\r\n          controls={blog.images.length === 1 ? false : true}\r\n        >\r\n          {blog.images.map((img) => (\r\n            <Carousel.Item key={img.url}>\r\n              <img\r\n                className='d-block w-100'\r\n                style={{ maxHeight: \"25rem\", objectFit: \"contain\" }}\r\n                src={img.thumbnail}\r\n                alt={img.filename}\r\n              />\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const blogDetail = () => {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Header>{blog.title}</Card.Header>\r\n          <Card.Body>\r\n            <ReactMarkdown>{blog.content}</ReactMarkdown>\r\n          </Card.Body>\r\n          <Card.Body>{renderCarousel()}</Card.Body>\r\n          <Card.Body>\r\n            <Card.Text>\r\n              {blog.likes} likes{\" \"}\r\n              <Button\r\n                variant='outline-success'\r\n                onClick={onLikesClick}\r\n                className='likeButton'\r\n              >\r\n                LIKE\r\n              </Button>\r\n              {showRemove()}\r\n            </Card.Text>\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <CommentForm blog={blog} addComment={addComment} />\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <Comments blog={blog} />\r\n          </Card.Body>\r\n        </Card>\r\n        {displayModal()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return blogDetail()\r\n}\r\n\r\nexport default Blog\r\n","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nconst Notification = () => {\r\n  const { messageBody, messageStyle } = useSelector(\r\n    (state) => state.notification\r\n  )\r\n\r\n  if (messageBody === \"\") {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Alert key={messageBody} variant={messageStyle}>\r\n      {messageBody}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  // visible = true: then show the form\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    props.setShowSortButton(visible)\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n      visible,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility} id='showForm'>\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>{props.children}</div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","/* eslint-disable indent */\r\nimport React, { useState, useRef } from \"react\"\r\nimport { Button, Form as styleForm, Alert } from \"react-bootstrap\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createBlog } from \"../reducers/blogReducer\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst NewBlogSchema = Yup.object().shape({\r\n  title: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  author: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  url: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  content: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n})\r\n\r\nconst BlogForm = ({ toggleForm }) => {\r\n  const dispatch = useDispatch()\r\n  const [files, setFiles] = useState(null)\r\n  const fileRef = useRef(null)\r\n  const handleFileChange = (e) => {\r\n    setFiles(e.target.files)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Alert variant='primary'>\r\n        <h2>CREATE</h2>\r\n      </Alert>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          title: \"\",\r\n          author: \"\",\r\n          url: \"\",\r\n          content: \"\",\r\n        }}\r\n        validationSchema={NewBlogSchema}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          setSubmitting(true)\r\n\r\n          const formData = new FormData()\r\n          for (const file in files) {\r\n            formData.append(\"files\", files[file])\r\n          }\r\n\r\n          const newBlog = {\r\n            title: values.title,\r\n            author: values.author,\r\n            url: values.url,\r\n            content: values.content,\r\n            date: Date.now(),\r\n          }\r\n\r\n          for (const [key, value] of Object.entries(newBlog)) {\r\n            formData.append(key, value)\r\n          }\r\n\r\n          dispatch(createBlog(formData))\r\n          setSubmitting(false)\r\n          setFiles(null)\r\n          fileRef.current.value = \"\"\r\n          resetForm({\r\n            values: {\r\n              title: \"\",\r\n              author: \"\",\r\n              url: \"\",\r\n              content: \"\",\r\n            },\r\n          })\r\n          toggleForm()\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Title:</styleForm.Label>\r\n              <Field\r\n                name='title'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='title'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Author:</styleForm.Label>\r\n              <Field\r\n                name='author'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='author'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Url:</styleForm.Label>\r\n              <Field\r\n                name='url'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='url'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Content:</styleForm.Label>\r\n              <Field name='content'>\r\n                {({ field }) => (\r\n                  <styleForm.Control\r\n                    as='textarea'\r\n                    rows={4}\r\n                    {...field}\r\n                  ></styleForm.Control>\r\n                )}\r\n              </Field>\r\n              <ErrorMessage name='content'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.File\r\n                id='image'\r\n                label='Upload images'\r\n                onChange={handleFileChange}\r\n                ref={fileRef}\r\n                multiple\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                variant='secondary'\r\n                id='cancel-button'\r\n                onClick={toggleForm}\r\n                style={{ marginRight: \"auto\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant='primary'\r\n                id='create-button'\r\n                type='submit'\r\n                style={{ marginLeft: \"auto\" }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport { initializeBlogs } from \"./blogReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nfunction userReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return action.data.user\r\n    case \"TOKEN_USER\":\r\n      return action.data.user\r\n    case \"SIGNOUT\":\r\n      return null\r\n    case \"FAIL\":\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: \"SUCCESS\",\r\n        data: { user },\r\n      })\r\n      dispatch(successMessage(`User ${user.username} logged in`))\r\n      dispatch(initializeBlogs())\r\n    } catch (exception) {\r\n      dispatch({ type: \"FAIL\" })\r\n      dispatch(errorMessage(\"Wrong username or password\"))\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 2000)\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"SIGNOUT\",\r\n  }\r\n}\r\n\r\nexport const userFromToken = (user) => {\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: \"TOKEN_USER\",\r\n    data: { user },\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { fetchUsers }\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.data.users\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.fetchUsers()\r\n    dispatch({\r\n      type: \"FETCH_ALL\",\r\n      data: { users },\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nconst UserList = () => {\r\n  const users = useSelector((state) => state.users)\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <tr key={user.id}>\r\n        <td>\r\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n        </td>\r\n\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Number of blogs posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderUsers()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Button, Navbar, Nav, Form, FormControl } from \"react-bootstrap\"\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { clearBlogs } from \"../reducers/blogReducer\"\r\nimport { logoutUser } from \"../reducers/userReducer\"\r\nimport { clearMessage, infoMessage } from \"../reducers/notificationReducer\"\r\nconst padding = {\r\n  padding: 5,\r\n}\r\n\r\nconst margins = {\r\n  margin: 5,\r\n}\r\n\r\nconst Header = ({ setSearchTerm, setCurrentPage }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogOut = async (event) => {\r\n    const name = user.name\r\n    window.localStorage.removeItem(\"loggedBlogUser\")\r\n    history.push(\"/\")\r\n    dispatch(logoutUser())\r\n    dispatch(clearBlogs())\r\n    dispatch(infoMessage(`User ${name} logged out`))\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 3000)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Navbar collapseOnSelect expand='lg' bg='light'>\r\n        <Navbar.Brand>\r\n          <Link style={padding} to='/'>\r\n            HIFORUM\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav className='mr-auto'></Nav>\r\n\r\n          {location.pathname === \"/signup\" ? (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Sign in\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/signup'>\r\n                Sign up\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n\r\n  const renderLoginMessage = () => {\r\n    return (\r\n      <Navbar.Text>\r\n        Hi, {user.name}\r\n        <Button variant='secondary' style={margins} onClick={handleLogOut}>\r\n          Sign out\r\n        </Button>\r\n      </Navbar.Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand='lg' bg='light'>\r\n      <Navbar.Brand>\r\n        <Link style={padding} to='/'>\r\n          HIFORUM\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n\r\n      <Navbar.Collapse id='responsive-navbar-nav'>\r\n        <Nav>\r\n          <Nav.Link as={Link} to='/'>\r\n            HOME\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to={`/users/${user.id}`}>\r\n            MY POSTS\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Form inline style={{ margin: \"0 auto\" }}>\r\n          <FormControl\r\n            type='text'\r\n            placeholder='Search'\r\n            className='mr-sm-2'\r\n            onChange={(event) => {\r\n              setSearchTerm(event.target.value)\r\n              setCurrentPage(1)\r\n            }}\r\n          />\r\n        </Form>\r\n        <Nav> {renderLoginMessage()}</Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Table } from \"react-bootstrap\"\r\nimport dayjs from \"dayjs\"\r\nconst User = ({ user, indexOfFirstPost, indexOfLastPost, setTotalBlogs }) => {\r\n  useEffect(() => {\r\n    setTotalBlogs(user ? user.blogs.length : 0)\r\n  }, [user, setTotalBlogs])\r\n\r\n  if (!user) {\r\n    return \"Loading...\"\r\n  }\r\n\r\n  const renderBlogs = () => {\r\n    const blogLists = user.blogs\r\n      .slice(indexOfFirstPost, indexOfLastPost)\r\n      .map((blog) => (\r\n        <tr key={blog.id}>\r\n          <td>\r\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n          </td>\r\n          <td>{` ${dayjs(blog.date).fromNow()}`}</td>\r\n        </tr>\r\n      ))\r\n    return blogLists\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`All Blogs By ${user.name}`}</h2>\r\n\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>BLOG</th>\r\n            <th>DATE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderBlogs()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { loginUser } from \"../reducers/userReducer\"\r\nimport { Formik, Field, Form } from \"formik\"\r\n\r\nconst LoginForm = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmit = async (values, { resetForm, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    dispatch(loginUser(values.username, values.password))\r\n    setSubmitting(false)\r\n    if (user === null) {\r\n      resetForm({ values: { username: values.username, password: \"\" } })\r\n    } else {\r\n      resetForm({ values: { username: \"\", password: \"\" } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ values, isSubmitting }) => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field name='username' type='input' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field name='password' type='password' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Sign in\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }\r\n","import React from \"react\"\r\nimport signUpService from \"../services/signup\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { Form as styleForm, Button, Alert } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport * as Yup from \"yup\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"../reducers/notificationReducer\"\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  username: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n})\r\n\r\nconst validatePasswords = (values) => {\r\n  const errors = {}\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = \"Must be the same as password above\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validate={validatePasswords}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n          if (values.password === values.confirmPassword) {\r\n            try {\r\n              setSubmitting(true)\r\n              const newUser = await signUpService.signUp({\r\n                name: values.name,\r\n                username: values.username,\r\n                password: values.password,\r\n              })\r\n              dispatch(successMessage(`New user ${newUser.name} signed up`))\r\n              setTimeout(() => {\r\n                dispatch(clearMessage())\r\n              }, 3000)\r\n              setSubmitting(false)\r\n              resetForm({\r\n                values: {\r\n                  name: \"\",\r\n                  username: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\",\r\n                },\r\n              })\r\n              history.push(\"/\")\r\n            } catch (err) {\r\n              dispatch(errorMessage(err))\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Full Name:</styleForm.Label>\r\n              <Field\r\n                name='name'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='name'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field\r\n                name='username'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n\r\n              <ErrorMessage name='username'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field\r\n                name='password'\r\n                type='password'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='password'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Confirm Password:</styleForm.Label>\r\n              <Field\r\n                type='password'\r\n                name='confirmPassword'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='confirmPassword'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n            <Button variant='primary' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React, { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\nimport { Table, Badge } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ndayjs.extend(relativeTime)\r\n\r\nconst BlogList = ({\r\n  sortBy,\r\n  searchTerm = \"\",\r\n  indexOfFirstPost,\r\n  indexOfLastPost,\r\n  setTotalBlogs,\r\n}) => {\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  const sortByMostLikes = () => {\r\n    return [...blogs].sort((a, b) => b.likes - a.likes)\r\n  }\r\n\r\n  const sortByLeastLikes = () => {\r\n    return [...blogs].sort((a, b) => a.likes - b.likes)\r\n  }\r\n\r\n  const sortByOldest = () => {\r\n    return [...blogs].sort((a, b) => a.date - b.date)\r\n  }\r\n\r\n  const sortByNewest = () => {\r\n    return [...blogs].sort((a, b) => b.date - a.date)\r\n  }\r\n\r\n  const sortBlogs = () => {\r\n    switch (sortBy) {\r\n      case \"Newest to Oldest\":\r\n        return sortByNewest()\r\n      case \"Oldest to Newest\":\r\n        return sortByOldest()\r\n      case \"Least to Most Likes\":\r\n        return sortByLeastLikes()\r\n      case \"Most to Least Likes\":\r\n        return sortByMostLikes()\r\n      default:\r\n        return sortByNewest()\r\n    }\r\n  }\r\n\r\n  // can be refactored\r\n  const sortedBlogs = sortBlogs()\r\n  const matchedBlogs = sortedBlogs.filter((blog) =>\r\n    blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  )\r\n\r\n  const renderUserLink = ({ user }) => {\r\n    return <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n  }\r\n\r\n  const renderTableData = () => {\r\n    let resultBlogs = searchTerm !== \"\" ? matchedBlogs : sortedBlogs\r\n    return [...resultBlogs]\r\n      .slice(indexOfFirstPost, indexOfLastPost)\r\n      .map((blog) => (\r\n        <tr key={blog.id}>\r\n          <td>\r\n            <Badge variant='light'>{blog.likes} LIKES</Badge>\r\n          </td>\r\n          <td>\r\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n          </td>\r\n\r\n          <td>\r\n            Posted by {renderUserLink(blog)}\r\n            {` ${dayjs(blog.date).fromNow()}`}\r\n          </td>\r\n        </tr>\r\n      ))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTotalBlogs(matchedBlogs.length)\r\n  }, [matchedBlogs.length, setTotalBlogs])\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table striped>\r\n          <tbody>{renderTableData()}</tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n","import React from \"react\"\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\"\r\nimport \"../index.css\"\r\nconst SortButton = ({ showSortButton, setSortBy, sortBy }) => {\r\n  return (\r\n    <div className={showSortButton === true ? \"displaySortButton\" : \"hide\"}>\r\n      <DropdownButton\r\n        id='dropdown-basic-button'\r\n        title={`SORT BY: ${sortBy}`}\r\n        variant='dark'\r\n      >\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Newest to Oldest\")\r\n          }}\r\n        >\r\n          Newest to Oldest\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Oldest to Newest\")\r\n          }}\r\n        >\r\n          Oldest to Newest\r\n        </Dropdown.Item>\r\n\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Least to Most Likes\")\r\n          }}\r\n        >\r\n          Least Likes to Most Likes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"Most to Least Likes\")\r\n          }}\r\n        >\r\n          Most Likes to Least Likes\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortButton\r\n","import React from \"react\"\r\nimport { Pagination } from \"react-bootstrap\"\r\nconst Pages = ({ postsPerPage, totalPosts, currentPage, setCurrentPage }) => {\r\n  const items = []\r\n  for (\r\n    let number = 1;\r\n    number <= Math.ceil(totalPosts / postsPerPage);\r\n    number++\r\n  ) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === currentPage}\r\n        onClick={(e) => {\r\n          setCurrentPage(e.target.text)\r\n        }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pagination>{items}</Pagination>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pages\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport Notification from \"./components/Notification\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { initializeBlogs } from \"./reducers/blogReducer\"\r\n\r\nimport { userFromToken } from \"./reducers/userReducer\"\r\nimport { fetchAllUsers } from \"./reducers/usersReducer\"\r\n\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\"\r\nimport UserList from \"./components/UserList\"\r\nimport Header from \"./components/Header\"\r\nimport User from \"./components/User\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport SignUpForm from \"./components/SignUpForm\"\r\nimport BlogList from \"./components/BlogList\"\r\nimport SortButon from \"./components/SortButton\"\r\nimport Pages from \"./components/Pages\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport \"./index.css\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\n\r\ndayjs.extend(relativeTime)\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  const user = useSelector((state) => state.user)\r\n  const users = useSelector((state) => state.users)\r\n\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const matchBlog = useRouteMatch(\"/blogs/:id\")\r\n  const individualUser = match\r\n    ? users.find((user) => user.id === match.params.id)\r\n    : null\r\n  const individualBlog = matchBlog\r\n    ? blogs.find((blog) => blog.id === matchBlog.params.id)\r\n    : null\r\n\r\n  const blogFormRef = useRef()\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [showSortButton, setShowSortButton] = useState(true)\r\n  const [sortBy, setSortBy] = useState(\"Newest to Oldest\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [postsPerPage] = useState(10)\r\n  const [totalBlogs, setTotalBlogs] = useState(blogs.length)\r\n  const indexOfLastPost = currentPage * postsPerPage\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(userFromToken(user))\r\n      dispatch(initializeBlogs())\r\n      dispatch(fetchAllUsers())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const onFormCancle = () => {\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable\r\n      buttonLabel='CREATE POST'\r\n      className='newBlogToggle'\r\n      ref={blogFormRef}\r\n      setShowSortButton={setShowSortButton}\r\n    >\r\n      <div>\r\n        <BlogForm toggleForm={onFormCancle} />\r\n      </div>\r\n    </Togglable>\r\n  )\r\n\r\n  const showAllBlogs = () => (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <div className={showSortButton === true ? \"showFlexButtons\" : \"\"}>\r\n        <SortButon\r\n          showSortButton={showSortButton}\r\n          setSortBy={setSortBy}\r\n          sortBy={sortBy}\r\n        />\r\n        {blogForm()}\r\n      </div>\r\n\r\n      <BlogList\r\n        sortBy={sortBy}\r\n        indexOfFirstPost={indexOfFirstPost}\r\n        indexOfLastPost={indexOfLastPost}\r\n        searchTerm={searchTerm}\r\n        setTotalBlogs={setTotalBlogs}\r\n      />\r\n      <Pages\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={totalBlogs}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const renderUserList = () => (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserPanel = () => (\r\n    <div>\r\n      <User\r\n        user={individualUser}\r\n        sortBy={sortBy}\r\n        indexOfFirstPost={indexOfFirstPost}\r\n        indexOfLastPost={indexOfLastPost}\r\n        searchTerm={searchTerm}\r\n        setTotalBlogs={setTotalBlogs}\r\n      />\r\n      <Pages\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={totalBlogs}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const renderSingleBlog = () => (\r\n    <div>\r\n      <Blog blog={individualBlog} user={user} />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className='content'>\r\n      <Header setSearchTerm={setSearchTerm} setCurrentPage={setCurrentPage} />\r\n      <Container style={{ flex: \"1 0 auto\" }}>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path='/users/:id'>{renderUserPanel()}</Route>\r\n\r\n          <Route exact path='/users'>\r\n            {renderUserList()}\r\n          </Route>\r\n\r\n          <Route path='/blogs/:id'>{renderSingleBlog()}</Route>\r\n          <Route path='/signup'>\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            {user === null ? <LoginForm /> : showAllBlogs()}\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport Footer from \"./components/Footer\"\r\nReactDOM.render(\r\n  [\r\n    <Provider store={store} key='1'>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>,\r\n    <Footer key='2' />,\r\n  ],\r\n  document.getElementById(\"root\")\r\n)\r\n","import React from \"react\"\r\nimport \"../index.css\"\r\nexport default function Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <a\r\n        href='https://github.com/HangCcZ'\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        style={{ color: \"inherit\" }}\r\n      >\r\n        Designed and Developed by Hang Chen\r\n      </a>\r\n    </footer>\r\n  )\r\n}\r\n"],"sourceRoot":""}