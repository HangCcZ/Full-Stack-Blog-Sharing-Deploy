{"version":3,"sources":["components/Comments.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","services/login.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/Header.js","components/User.js","components/LoginForm.js","services/signup.js","components/SignUpForm.js","App.js","store.js","index.js"],"names":["Comments","blog","comments","ListGroup","map","comment","Item","key","baseUrl","token","getAll","a","axios","get","response","data","getAllFromUser","userId","console","log","blogs","create","newObject","config","headers","Authorization","post","deleteBlog","delete","id","setToken","newToken","updateLikes","put","updateComments","blogObject","errorMessage","message","type","successMessage","notificationReducer","state","messageBody","messageType","action","messageStyle","dispatch","blogService","initializeBlogs","blogReducer","newBlog","updatedBlog","updatedBlogComment","filter","CommentForm","addComment","useState","setComment","Form","onSubmit","event","preventDefault","Group","Control","value","name","onChange","target","placeholder","Text","className","Button","Blog","clickLike","removeBlog","user","useDispatch","history","useHistory","push","onLikesClick","onRemoveClick","window","confirm","title","author","commentBlog","Card","Body","Title","likes","variant","onClick","Notification","useSelector","notification","Alert","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","marginLeft","buttonLabel","children","BlogForm","toggleForm","initialValues","url","values","resetForm","setSubmitting","setTimeout","Label","as","styleForm","autoComplete","marginRight","login","credentials","loginUser","username","password","loginService","localStorage","setItem","JSON","stringify","userReducer","fetchUsers","usersReducer","users","UserList","Table","striped","to","length","padding","margins","margin","Header","location","useLocation","handleLogOut","removeItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Link","User","LoginForm","onFormSubmit","marginTop","isSubmitting","signUp","SignupSchema","Yup","shape","min","max","required","confirmPassword","validatePasswords","errors","SignUpForm","validate","validationSchema","signUpService","newUser","App","match","useRouteMatch","matchBlog","individualUser","find","params","individualBlog","blogFormRef","useRef","useEffect","loggedUserJSON","getItem","parse","userFromToken","usersService","addLike","likeBlog","exception","onFormCancle","current","Container","path","exact","sort","b","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c67df549.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nconst Comments = ({ blog }) => {\r\n  if (!blog.comments) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <ListGroup>\r\n        {blog.comments.map((comment) => (\r\n          <ListGroup.Item key={comment}>{comment}</ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/blogs\"\r\nconst userUrl = \"/api/users\"\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\n// send request to api/user/id\r\n// get all blogs corresponding to current user\r\nconst getAllFromUser = async (userId) => {\r\n  const response = await axios.get(`${userUrl}/${userId}`)\r\n  console.log(response.data.blogs)\r\n  return response.data.blogs\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${newObject.id}`, config)\r\n  return response\r\n}\r\n\r\nconst updateLikes = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.id}`,\r\n    newObject,\r\n    config\r\n  )\r\n  return response.data\r\n}\r\n\r\nconst updateComments = async (comment, blogObject) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {\r\n    comment,\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getAllFromUser,\r\n  setToken,\r\n  create,\r\n  updateLikes,\r\n  deleteBlog,\r\n  updateComments,\r\n}\r\n","const notificationReducer = (\r\n  state = { messageBody: \"\", messageType: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"success\" }\r\n    case \"FAIL_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"warning\" }\r\n    case \"INFO_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"info\" }\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { messageBody: \"\", messageType: \"\" }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (message) => {\r\n  return {\r\n    type: \"FAIL_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const successMessage = (message) => {\r\n  return {\r\n    type: \"SUCCESS_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const infoMessage = (message) => {\r\n  return {\r\n    type: \"INFO_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import blogService from \"../services/blogs\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data.blogs\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data.newBlog]\r\n    case \"LIKE_BLOG\":\r\n      const updatedBlog = action.data.updatedBlog\r\n      const id = updatedBlog.id\r\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\r\n    case \"COMMENT_BLOG\":\r\n      const updatedBlogComment = action.data.updatedBlog\r\n      return state.map((blog) =>\r\n        blog.id !== updatedBlogComment.id ? blog : updatedBlogComment\r\n      )\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data.id)\r\n    case \"CLEAR_BLOGS\":\r\n      return []\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const commentBlog = (blogObject, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateComments(blogObject, comment)\r\n    dispatch({\r\n      type: \"COMMENT_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newBlog = await blogService.create(blogObject)\r\n      dispatch({\r\n        type: \"NEW_BLOG\",\r\n        data: { newBlog },\r\n      })\r\n      dispatch(\r\n        successMessage(\r\n          `a new blog ${newBlog.title} by ${newBlog.author} created`\r\n        )\r\n      )\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`Error creating a new blog ${exception}`))\r\n    }\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateLikes(blogObject)\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    await blogService.deleteBlog(blogObject)\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: { id: blogObject.id },\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: { blogs },\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearBlogs = () => {\r\n  return {\r\n    type: \"CLEAR_BLOGS\",\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nconst CommentForm = ({ addComment }) => {\r\n  const [comment, setComment] = useState(\"\")\r\n\r\n  const handleChange = (event) => {\r\n    setComment(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setComment(\"\")\r\n    addComment(comment)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            id='comment'\r\n            type='text'\r\n            value={comment}\r\n            name='comment'\r\n            onChange={handleChange}\r\n            placeholder='Add your comment here'\r\n          />\r\n          <Form.Text className='text-muted'>\r\n            Please follow the community's rule!\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Button type='submit' id='create-comment'>\r\n          add comment\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React from \"react\"\r\nimport Comments from \"./Comments\"\r\nimport { commentBlog } from \"../reducers/blogReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport CommentForm from \"./CommentForm\"\r\nimport { Button, Card } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nconst Blog = ({ blog, clickLike, removeBlog, user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  if (!user) {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const onLikesClick = () => {\r\n    clickLike(blog)\r\n  }\r\n\r\n  const onRemoveClick = () => {\r\n    const result = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\r\n    if (result) {\r\n      removeBlog(blog)\r\n    }\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(commentBlog(comment, blog))\r\n  }\r\n\r\n  const showRemove = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button\r\n            variant='danger'\r\n            onClick={onRemoveClick}\r\n            className='delete-button'\r\n          >\r\n            remove\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const blogDetail = () => {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>{blog.title}</Card.Title>\r\n            <Card.Text>\r\n              {blog.likes} likes{\" \"}\r\n              <Button\r\n                variant='outline-success'\r\n                onClick={onLikesClick}\r\n                className='likeButton'\r\n              >\r\n                Like\r\n              </Button>\r\n              {showRemove()}\r\n            </Card.Text>\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <Card.Title>Comments</Card.Title>\r\n            <Comments blog={blog} />\r\n            <CommentForm blog={blog} addComment={addComment} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return blogDetail()\r\n}\r\n\r\nexport default Blog\r\n","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nconst Notification = () => {\r\n  const { messageBody, messageStyle } = useSelector(\r\n    (state) => state.notification\r\n  )\r\n\r\n  if (messageBody === \"\") {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Alert key={messageBody} variant={messageStyle}>\r\n      {messageBody}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  // visible = true: then show the form\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"flex\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button\r\n          onClick={toggleVisibility}\r\n          id='showForm'\r\n          style={{ marginLeft: \"auto\" }}\r\n        >\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>{props.children}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","/* eslint-disable indent */\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Button, Form as styleForm, Alert } from \"react-bootstrap\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createBlog } from \"../reducers/blogReducer\"\r\n\r\nconst BlogForm = ({ toggleForm }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <>\r\n      <Alert variant='primary'>\r\n        <h2>Create a new blog</h2>\r\n      </Alert>\r\n\r\n      <Formik\r\n        initialValues={{ title: \"\", author: \"\", url: \"\" }}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          setSubmitting(true)\r\n          const newBlog = {\r\n            title: values.title,\r\n            author: values.author,\r\n            url: values.url,\r\n          }\r\n          dispatch(createBlog(newBlog))\r\n          setSubmitting(false)\r\n          resetForm({\r\n            values: {\r\n              title: \"\",\r\n              author: \"\",\r\n              url: \"\",\r\n            },\r\n          })\r\n          toggleForm()\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Title:</styleForm.Label>\r\n              <Field\r\n                name='title'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Author:</styleForm.Label>\r\n              <Field\r\n                name='author'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Url:</styleForm.Label>\r\n              <Field\r\n                name='url'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                variant='secondary'\r\n                id='cancel-button'\r\n                onClick={toggleForm}\r\n                style={{ marginRight: \"auto\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant='primary'\r\n                id='create-button'\r\n                type='submit'\r\n                style={{ marginLeft: \"auto\" }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n        {/* <Form.Group>\r\n          \r\n\r\n          <Form.Label>author:</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            id='author'\r\n            value={author}\r\n            name='author'\r\n            onChange={handleNewBlogChange}\r\n          />\r\n\r\n          <Form.Label>url:</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            value={url}\r\n            name='url'\r\n            id='url'\r\n            onChange={handleNewBlogChange}\r\n          />\r\n        </Form.Group>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Button\r\n            variant='secondary'\r\n            id='cancel-button'\r\n            onClick={onCancleClick}\r\n            style={{ marginRight: \"auto\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            id='create-button'\r\n            type='submit'\r\n            style={{ marginLeft: \"auto\" }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </Form> */}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  createBlog: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport { initializeBlogs } from \"./blogReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nfunction userReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return action.data.user\r\n    case \"TOKEN_USER\":\r\n      return action.data.user\r\n    case \"SIGNOUT\":\r\n      return null\r\n    case \"FAIL\":\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: \"SUCCESS\",\r\n        data: { user },\r\n      })\r\n      dispatch(successMessage(`User ${user.username} logged in`))\r\n      dispatch(initializeBlogs())\r\n    } catch (exception) {\r\n      dispatch({ type: \"FAIL\" })\r\n      dispatch(errorMessage(\"Wrong username or password\"))\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"SIGNOUT\",\r\n  }\r\n}\r\n\r\nexport const userFromToken = (user) => {\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: \"TOKEN_USER\",\r\n    data: { user },\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { fetchUsers }\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.data.users\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.fetchUsers()\r\n    dispatch({\r\n      type: \"FETCH_ALL\",\r\n      data: { users },\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nconst UserList = ({ user }) => {\r\n  const users = useSelector((state) => state.users)\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <tr key={user.name}>\r\n        <td>\r\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n        </td>\r\n\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Number of blogs posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderUsers()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\"\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { clearBlogs } from \"../reducers/blogReducer\"\r\nimport { logoutUser } from \"../reducers/userReducer\"\r\nimport { clearMessage, infoMessage } from \"../reducers/notificationReducer\"\r\nconst padding = {\r\n  padding: 5,\r\n}\r\n\r\nconst margins = {\r\n  margin: 5,\r\n}\r\n\r\nconst Header = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogOut = async (event) => {\r\n    const name = user.name\r\n    window.localStorage.removeItem(\"loggedBlogUser\")\r\n    history.push(\"/\")\r\n    dispatch(logoutUser())\r\n    dispatch(clearBlogs())\r\n    dispatch(infoMessage(`User ${name} logged out`))\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 3000)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Navbar collapseOnSelect expand='lg' bg='light'>\r\n        <Navbar.Brand>\r\n          <Link style={padding} to='/'>\r\n            Hang's Blog App\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav className='mr-auto'></Nav>\r\n\r\n          {location.pathname === \"/signup\" ? (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Log In\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/signup'>\r\n                Sign Up\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n\r\n  const renderLoginMessage = () => {\r\n    return (\r\n      <Navbar.Text>\r\n        Hi, {user.name}\r\n        <Button variant='secondary' style={margins} onClick={handleLogOut}>\r\n          LOG OUT\r\n        </Button>\r\n      </Navbar.Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand='lg' bg='light'>\r\n      <Navbar.Brand>\r\n        <Link style={padding} to='/'>\r\n          Hang's Blog App\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n      <Navbar.Collapse id='responsive-navbar-nav'>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link as={Link} to='/'>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to='users'>\r\n            Users\r\n          </Nav.Link>\r\n        </Nav>\r\n\r\n        <Nav className='justify-content-end'> {renderLoginMessage()}</Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h3>added blogs</h3>\r\n      {user.blogs.map((blog) => {\r\n        return <li key={blog.id}>{blog.title}</li>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { loginUser } from \"../reducers/userReducer\"\r\nimport { Formik, Field, Form } from \"formik\"\r\n\r\nconst LoginForm = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmit = async (values, { resetForm, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    dispatch(loginUser(values.username, values.password))\r\n    setSubmitting(false)\r\n    if (user === null) {\r\n      resetForm({ values: { username: values.username, password: \"\" } })\r\n    } else {\r\n      resetForm({ values: { username: \"\", password: \"\" } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ values, isSubmitting }) => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field name='username' type='input' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field name='password' type='password' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }\r\n","import React from \"react\"\r\nimport signUpService from \"../services/signup\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport * as Yup from \"yup\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"../reducers/notificationReducer\"\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  username: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n})\r\n\r\nconst validatePasswords = (values) => {\r\n  const errors = {}\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = \"Must be the same as password above\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validate={validatePasswords}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n          if (values.password === values.confirmPassword) {\r\n            try {\r\n              setSubmitting(true)\r\n              const newUser = await signUpService.signUp({\r\n                name: values.name,\r\n                username: values.username,\r\n                password: values.password,\r\n              })\r\n              dispatch(successMessage(`New user ${newUser.name} signed up`))\r\n              setTimeout(() => {\r\n                dispatch(clearMessage())\r\n              }, 3000)\r\n              setSubmitting(false)\r\n              resetForm({\r\n                values: {\r\n                  name: \"\",\r\n                  username: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\",\r\n                },\r\n              })\r\n              history.push(\"/\")\r\n            } catch (err) {\r\n              dispatch(errorMessage(err))\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Full Name:</styleForm.Label>\r\n              <Field\r\n                name='name'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='name' />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field\r\n                name='username'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n\r\n              <ErrorMessage name='username' />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field\r\n                name='password'\r\n                type='password'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='password' />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Confirm Password:</styleForm.Label>\r\n              <Field\r\n                type='password'\r\n                name='confirmPassword'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='confirmPassword' />\r\n            </styleForm.Group>\r\n            <Button variant='primary' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React, { useEffect, useRef } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport Notification from \"./components/Notification\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { deleteBlog, likeBlog, initializeBlogs } from \"./reducers/blogReducer\"\r\n\r\nimport { userFromToken } from \"./reducers/userReducer\"\r\nimport { fetchAllUsers } from \"./reducers/usersReducer\"\r\nimport { errorMessage, clearMessage } from \"./reducers/notificationReducer\"\r\n\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\"\r\nimport UserList from \"./components/UserList\"\r\nimport Header from \"./components/Header\"\r\nimport User from \"./components/User\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport SignUpForm from \"./components/SignUpForm\"\r\nimport { Table, Container } from \"react-bootstrap\"\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const user = useSelector((state) => state.user)\r\n  const users = useSelector((state) => state.users)\r\n\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const matchBlog = useRouteMatch(\"/blogs/:id\")\r\n  const individualUser = match\r\n    ? users.find((user) => user.id === match.params.id)\r\n    : null\r\n  const individualBlog = matchBlog\r\n    ? blogs.find((blog) => blog.id === matchBlog.params.id)\r\n    : null\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(userFromToken(user))\r\n      dispatch(initializeBlogs())\r\n      dispatch(fetchAllUsers())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const addLike = (blogObject) => {\r\n    try {\r\n      dispatch(likeBlog(blogObject))\r\n    } catch (exception) {\r\n      dispatch(errorMessage(\"error updating the vlog\"))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const removeBlog = async (blogObject) => {\r\n    try {\r\n      dispatch(deleteBlog(blogObject))\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error deleting the vlog, error: ${exception}`))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const onFormCancle = () => {\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable\r\n      buttonLabel='Post a new blog'\r\n      className='newBlogToggle'\r\n      ref={blogFormRef}\r\n    >\r\n      <div>\r\n        <BlogForm toggleForm={onFormCancle} />\r\n      </div>\r\n    </Togglable>\r\n  )\r\n\r\n  const showUserBlogs = () => (\r\n    <div>\r\n      {blogForm()}\r\n      <Table striped>\r\n        <tbody>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog) => (\r\n              <tr key={blog.id}>\r\n                <td>\r\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                </td>\r\n                <td>{blog.author}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n\r\n  const renderUserList = () => (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserPanel = () => (\r\n    <div>\r\n      <User user={individualUser} />\r\n    </div>\r\n  )\r\n\r\n  const renderSingleBlog = () => (\r\n    <div>\r\n      <Blog\r\n        blog={individualBlog}\r\n        clickLike={addLike}\r\n        removeBlog={removeBlog}\r\n        user={user}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path='/users/:id'>{renderUserPanel()}</Route>\r\n\r\n          <Route exact path='/users'>\r\n            {renderUserList()}\r\n          </Route>\r\n\r\n          <Route path='/blogs/:id'>{renderSingleBlog()}</Route>\r\n          <Route path='/signup'>\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            {user === null ? <LoginForm /> : showUserBlogs()}\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}