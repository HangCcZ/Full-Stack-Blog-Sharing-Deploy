{"version":3,"sources":["components/Comments.js","services/blogs.js","reducers/blogReducer.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","services/login.js","reducers/notificationReducer.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/Header.js","components/User.js","components/LoginForm.js","services/signup.js","components/SignUpForm.js","App.js","store.js","index.js"],"names":["Comments","blog","comments","ListGroup","map","comment","Item","key","baseUrl","token","getAll","a","axios","get","response","data","getAllFromUser","userId","console","log","blogs","create","newObject","config","headers","Authorization","post","deleteBlog","delete","id","setToken","newToken","updateLikes","put","updateComments","blogObject","dispatch","blogService","type","initializeBlogs","blogReducer","state","action","newBlog","updatedBlog","updatedBlogComment","filter","CommentForm","addComment","useState","setComment","Form","onSubmit","event","preventDefault","Group","Control","value","name","onChange","target","placeholder","Text","className","Button","Blog","clickLike","removeBlog","user","useDispatch","history","useHistory","push","onLikesClick","onRemoveClick","window","confirm","title","author","commentBlog","Card","Body","Title","likes","variant","onClick","Notification","useSelector","notification","messageBody","messageStyle","Alert","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","BlogForm","createBlog","setTitle","setAuthor","url","setUrl","handleNewBlogChange","Label","login","credentials","errorMessage","message","successMessage","notificationReducer","messageType","loginUser","username","password","loginService","localStorage","setItem","JSON","stringify","setTimeout","userReducer","fetchUsers","usersReducer","users","UserList","Table","striped","to","length","padding","margins","margin","Header","location","useLocation","handleLogOut","removeItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Link","as","User","LoginForm","onFormSubmit","values","resetForm","setSubmitting","marginTop","initialValues","isSubmitting","styleForm","signUp","SignupSchema","Yup","shape","min","max","required","confirmPassword","validatePasswords","errors","SignUpForm","validate","validationSchema","signUpService","newUser","autoComplete","App","match","useRouteMatch","matchBlog","individualUser","find","params","individualBlog","blogFormRef","useRef","useEffect","loggedUserJSON","getItem","parse","userFromToken","usersService","addBlog","current","exception","addLike","likeBlog","Container","path","exact","sort","b","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adc5ab10.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nconst Comments = ({ blog }) => {\r\n  if (!blog.comments) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <ListGroup>\r\n        {blog.comments.map((comment) => (\r\n          <ListGroup.Item key={comment}>{comment}</ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/blogs\"\r\nconst userUrl = \"/api/users\"\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\n// send request to api/user/id\r\n// get all blogs corresponding to current user\r\nconst getAllFromUser = async (userId) => {\r\n  const response = await axios.get(`${userUrl}/${userId}`)\r\n  console.log(response.data.blogs)\r\n  return response.data.blogs\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${newObject.id}`, config)\r\n  return response\r\n}\r\n\r\nconst updateLikes = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.id}`,\r\n    newObject,\r\n    config\r\n  )\r\n  return response.data\r\n}\r\n\r\nconst updateComments = async (comment, blogObject) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {\r\n    comment,\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getAllFromUser,\r\n  setToken,\r\n  create,\r\n  updateLikes,\r\n  deleteBlog,\r\n  updateComments,\r\n}\r\n","import blogService from \"../services/blogs\"\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data.blogs\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data.newBlog]\r\n    case \"LIKE_BLOG\":\r\n      const updatedBlog = action.data.updatedBlog\r\n      const id = updatedBlog.id\r\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\r\n    case \"COMMENT_BLOG\":\r\n      const updatedBlogComment = action.data.updatedBlog\r\n      return state.map((blog) =>\r\n        blog.id !== updatedBlogComment.id ? blog : updatedBlogComment\r\n      )\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data.id)\r\n    case \"CLEAR_BLOGS\":\r\n      return []\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const commentBlog = (blogObject, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateComments(blogObject, comment)\r\n    dispatch({\r\n      type: \"COMMENT_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.create(blogObject)\r\n    dispatch({\r\n      type: \"NEW_BLOG\",\r\n      data: { newBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateLikes(blogObject)\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    await blogService.deleteBlog(blogObject)\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: { id: blogObject.id },\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: { blogs },\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearBlogs = () => {\r\n  return {\r\n    type: \"CLEAR_BLOGS\",\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import React, { useState } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nconst CommentForm = ({ addComment }) => {\r\n  const [comment, setComment] = useState(\"\")\r\n\r\n  const handleChange = (event) => {\r\n    setComment(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setComment(\"\")\r\n    addComment(comment)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            id='comment'\r\n            type='text'\r\n            value={comment}\r\n            name='comment'\r\n            onChange={handleChange}\r\n            placeholder='Add your comment here'\r\n          />\r\n          <Form.Text className='text-muted'>\r\n            Please follow the community's rule!\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Button type='submit' id='create-comment'>\r\n          add comment\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React from \"react\"\r\nimport Comments from \"./Comments\"\r\nimport { commentBlog } from \"../reducers/blogReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport CommentForm from \"./CommentForm\"\r\nimport { Button, Card } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nconst Blog = ({ blog, clickLike, removeBlog, user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  if (!user) {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const onLikesClick = () => {\r\n    clickLike(blog)\r\n  }\r\n\r\n  const onRemoveClick = () => {\r\n    const result = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\r\n    if (result) {\r\n      removeBlog(blog)\r\n    }\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(commentBlog(comment, blog))\r\n  }\r\n\r\n  const showRemove = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button\r\n            variant='danger'\r\n            onClick={onRemoveClick}\r\n            className='delete-button'\r\n          >\r\n            remove\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const blogDetail = () => {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>{blog.title}</Card.Title>\r\n            <Card.Text>\r\n              {blog.likes} likes{\" \"}\r\n              <Button\r\n                variant='outline-success'\r\n                onClick={onLikesClick}\r\n                className='likeButton'\r\n              >\r\n                Like\r\n              </Button>\r\n              {showRemove()}\r\n            </Card.Text>\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <Card.Title>Comments</Card.Title>\r\n            <Comments blog={blog} />\r\n            <CommentForm blog={blog} addComment={addComment} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return blogDetail()\r\n}\r\n\r\nexport default Blog\r\n","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nconst Notification = () => {\r\n  const { messageBody, messageStyle } = useSelector(\r\n    (state) => state.notification\r\n  )\r\n\r\n  if (messageBody === \"\") {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Alert key={messageBody} variant={messageStyle}>\r\n      {messageBody}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  // visible = true: then show the form\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility} id='showForm'>\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button variant='secondary' onClick={toggleVisibility} id='hideForm'>\r\n          cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","/* eslint-disable indent */\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Button, Form } from \"react-bootstrap\"\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState(\"\")\r\n  const [author, setAuthor] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const handleNewBlogChange = (event) => {\r\n    switch (event.target.name) {\r\n      case \"title\":\r\n        setTitle(event.target.value)\r\n        break\r\n      case \"author\":\r\n        setAuthor(event.target.value)\r\n        break\r\n      case \"url\":\r\n        setUrl(event.target.value)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const clearBlogFields = () => {\r\n    setTitle(\"\")\r\n    setUrl(\"\")\r\n    setAuthor(\"\")\r\n  }\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    const newBlog = {\r\n      title,\r\n      author,\r\n      url,\r\n    }\r\n    createBlog(newBlog)\r\n    clearBlogFields()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Create a new blog</h2>\r\n      <Form onSubmit={addBlog}>\r\n        <Form.Group>\r\n          <Form.Label>title:</Form.Label>\r\n\r\n          <Form.Control\r\n            id='title'\r\n            type='text'\r\n            value={title}\r\n            name='title'\r\n            onChange={handleNewBlogChange}\r\n          />\r\n\r\n          <Form.Label>author:</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            id='author'\r\n            value={author}\r\n            name='author'\r\n            onChange={handleNewBlogChange}\r\n          />\r\n\r\n          <Form.Label>url:</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            value={url}\r\n            name='url'\r\n            id='url'\r\n            onChange={handleNewBlogChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant='primary' id='create-button' type='submit'>\r\n          create\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  createBlog: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","const notificationReducer = (\r\n  state = { messageBody: \"\", messageType: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"success\" }\r\n    case \"FAIL_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"warning\" }\r\n    case \"INFO_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"info\" }\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { messageBody: \"\", messageType: \"\" }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (message) => {\r\n  return {\r\n    type: \"FAIL_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const successMessage = (message) => {\r\n  return {\r\n    type: \"SUCCESS_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const infoMessage = (message) => {\r\n  return {\r\n    type: \"INFO_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport { initializeBlogs } from \"./blogReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nfunction userReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return action.data.user\r\n    case \"TOKEN_USER\":\r\n      return action.data.user\r\n    case \"SIGNOUT\":\r\n      return null\r\n    case \"FAIL\":\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: \"SUCCESS\",\r\n        data: { user },\r\n      })\r\n      dispatch(successMessage(`User ${user.username} logged in`))\r\n      dispatch(initializeBlogs())\r\n    } catch (exception) {\r\n      dispatch({ type: \"FAIL\" })\r\n      dispatch(errorMessage(\"Wrong username or password\"))\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"SIGNOUT\",\r\n  }\r\n}\r\n\r\nexport const userFromToken = (user) => {\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: \"TOKEN_USER\",\r\n    data: { user },\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { fetchUsers }\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.data.users\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.fetchUsers()\r\n    dispatch({\r\n      type: \"FETCH_ALL\",\r\n      data: { users },\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nconst UserList = ({ user }) => {\r\n  const users = useSelector((state) => state.users)\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <tr key={user.name}>\r\n        <td>\r\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n        </td>\r\n\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Number of blogs posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderUsers()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\"\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { clearBlogs } from \"../reducers/blogReducer\"\r\nimport { logoutUser } from \"../reducers/userReducer\"\r\nimport { clearMessage, infoMessage } from \"../reducers/notificationReducer\"\r\nconst padding = {\r\n  padding: 5,\r\n}\r\n\r\nconst margins = {\r\n  margin: 5,\r\n}\r\n\r\nconst Header = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogOut = async (event) => {\r\n    const name = user.name\r\n    window.localStorage.removeItem(\"loggedBlogUser\")\r\n    history.push(\"/\")\r\n    dispatch(logoutUser())\r\n    dispatch(clearBlogs())\r\n    dispatch(infoMessage(`User ${name} logged out`))\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 3000)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Navbar collapseOnSelect expand='lg' bg='light'>\r\n        <Navbar.Brand>\r\n          <Link style={padding} to='/'>\r\n            Hang's Blog App\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav className='mr-auto'></Nav>\r\n\r\n          {location.pathname === \"/signup\" ? (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Log In\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/signup'>\r\n                Sign Up\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n\r\n  const renderLoginMessage = () => {\r\n    return (\r\n      <Navbar.Text>\r\n        Hi, {user.name}\r\n        <Button variant='secondary' style={margins} onClick={handleLogOut}>\r\n          LOG OUT\r\n        </Button>\r\n      </Navbar.Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand='lg' bg='light'>\r\n      <Navbar.Brand>\r\n        <Link style={padding} to='/'>\r\n          Hang's Blog App\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n      <Navbar.Collapse id='responsive-navbar-nav'>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link as={Link} to='/'>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to='users'>\r\n            Users\r\n          </Nav.Link>\r\n        </Nav>\r\n\r\n        <Nav className='justify-content-end'> {renderLoginMessage()}</Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h3>added blogs</h3>\r\n      {user.blogs.map((blog) => {\r\n        return <li key={blog.id}>{blog.title}</li>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { loginUser } from \"../reducers/userReducer\"\r\nimport { Formik, Field, Form } from \"formik\"\r\n\r\nconst LoginForm = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmit = async (values, { resetForm, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    dispatch(loginUser(values.username, values.password))\r\n    setSubmitting(false)\r\n    if (user === null) {\r\n      resetForm({ values: { username: values.username, password: \"\" } })\r\n    } else {\r\n      resetForm({ values: { username: \"\", password: \"\" } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ values, isSubmitting }) => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field name='username' type='input' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field name='password' type='password' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }\r\n","import React from \"react\"\r\nimport signUpService from \"../services/signup\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport * as Yup from \"yup\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"../reducers/notificationReducer\"\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  username: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n})\r\n\r\nconst validatePasswords = (values) => {\r\n  const errors = {}\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = \"Must be the same as password above\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validate={validatePasswords}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n          if (values.password === values.confirmPassword) {\r\n            try {\r\n              setSubmitting(true)\r\n              const newUser = await signUpService.signUp({\r\n                name: values.name,\r\n                username: values.username,\r\n                password: values.password,\r\n              })\r\n              dispatch(successMessage(`New user ${newUser.name} signed up`))\r\n              setTimeout(() => {\r\n                dispatch(clearMessage())\r\n              }, 3000)\r\n              setSubmitting(false)\r\n              resetForm({\r\n                values: {\r\n                  name: \"\",\r\n                  username: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\",\r\n                },\r\n              })\r\n              history.push(\"/\")\r\n            } catch (err) {\r\n              dispatch(errorMessage(err))\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Full Name:</styleForm.Label>\r\n              <Field\r\n                name='name'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='name' />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field\r\n                name='username'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n\r\n              <ErrorMessage name='username' />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field\r\n                name='password'\r\n                type='password'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='password' />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Confirm Password:</styleForm.Label>\r\n              <Field\r\n                type='password'\r\n                name='confirmPassword'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='confirmPassword' />\r\n            </styleForm.Group>\r\n            <Button variant='primary' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React, { useEffect, useRef } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport Notification from \"./components/Notification\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  createBlog,\r\n  deleteBlog,\r\n  likeBlog,\r\n  initializeBlogs,\r\n} from \"./reducers/blogReducer\"\r\n\r\nimport { userFromToken } from \"./reducers/userReducer\"\r\nimport { fetchAllUsers } from \"./reducers/usersReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./reducers/notificationReducer\"\r\n\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\"\r\nimport UserList from \"./components/UserList\"\r\nimport Header from \"./components/Header\"\r\nimport User from \"./components/User\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport SignUpForm from \"./components/SignUpForm\"\r\nimport { Table, Container } from \"react-bootstrap\"\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const user = useSelector((state) => state.user)\r\n  const users = useSelector((state) => state.users)\r\n\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const matchBlog = useRouteMatch(\"/blogs/:id\")\r\n  const individualUser = match\r\n    ? users.find((user) => user.id === match.params.id)\r\n    : null\r\n  const individualBlog = matchBlog\r\n    ? blogs.find((blog) => blog.id === matchBlog.params.id)\r\n    : null\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(userFromToken(user))\r\n      dispatch(initializeBlogs())\r\n      dispatch(fetchAllUsers())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const addBlog = (blogObject) => {\r\n    try {\r\n      dispatch(createBlog(blogObject))\r\n\r\n      blogFormRef.current.toggleVisibility()\r\n\r\n      dispatch(\r\n        successMessage(\r\n          `a new blog ${blogObject.title} by ${blogObject.author} created`\r\n        )\r\n      )\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    } catch (exception) {\r\n      dispatch(errorMessage(\"Error creating a new blog \"))\r\n    }\r\n  }\r\n\r\n  const addLike = (blogObject) => {\r\n    try {\r\n      dispatch(likeBlog(blogObject))\r\n    } catch (exception) {\r\n      dispatch(errorMessage(\"error updating the vlog\"))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const removeBlog = async (blogObject) => {\r\n    try {\r\n      dispatch(deleteBlog(blogObject))\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error deleting the vlog, error: ${exception}`))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable\r\n      buttonLabel='Post a new blog'\r\n      className='newBlogToggle'\r\n      ref={blogFormRef}\r\n    >\r\n      <div>\r\n        <BlogForm createBlog={addBlog} />\r\n      </div>\r\n    </Togglable>\r\n  )\r\n\r\n  const showUserBlogs = () => (\r\n    <div>\r\n      {blogForm()}\r\n      <Table striped>\r\n        <tbody>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog) => (\r\n              <tr key={blog.id}>\r\n                <td>\r\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                </td>\r\n                <td>{blog.author}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n\r\n  const renderUserList = () => (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserPanel = () => (\r\n    <div>\r\n      <User user={individualUser} />\r\n    </div>\r\n  )\r\n\r\n  const renderSingleBlog = () => (\r\n    <div>\r\n      <Blog\r\n        blog={individualBlog}\r\n        clickLike={addLike}\r\n        removeBlog={removeBlog}\r\n        user={user}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path='/users/:id'>{renderUserPanel()}</Route>\r\n\r\n          <Route exact path='/users'>\r\n            {renderUserList()}\r\n          </Route>\r\n\r\n          <Route path='/blogs/:id'>{renderSingleBlog()}</Route>\r\n          <Route path='/signup'>\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            {user === null ? <LoginForm /> : showUserBlogs()}\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}