{"version":3,"sources":["components/Comments.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","services/login.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/Header.js","components/User.js","components/LoginForm.js","services/signup.js","components/SignUpForm.js","components/BlogList.js","components/SortButton.js","App.js","store.js","index.js","components/Footer.js"],"names":["Comments","blog","comments","ListGroup","map","comment","Item","key","baseUrl","token","getAll","a","axios","get","response","data","getAllFromUser","userId","console","log","blogs","create","newObject","config","headers","Authorization","post","deleteBlog","delete","id","setToken","newToken","updateLikes","put","updateComments","blogObject","errorMessage","message","type","successMessage","notificationReducer","state","messageBody","messageType","action","messageStyle","initializeBlogs","dispatch","blogService","blogReducer","newBlog","updatedBlog","updatedBlogComment","filter","CommentForm","addComment","user","useSelector","initialValues","onSubmit","values","resetForm","setSubmitting","Group","Label","name","field","Control","as","rows","placeholder","Text","className","Button","Blog","useDispatch","history","useHistory","useState","showModal","setShowModal","handleClose","handleShow","push","onLikesClick","setTimeout","removeBlog","title","commentBlog","Card","Header","Body","content","images","length","Carousel","indicators","interval","controls","img","url","style","maxHeight","objectFit","src","thumbnail","alt","filename","likes","variant","onClick","Modal","show","onHide","closeButton","Title","Alert","Footer","Notification","notification","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","setShowSortButton","useImperativeHandle","buttonLabel","children","NewBlogSchema","Yup","shape","min","required","author","BlogForm","toggleForm","files","setFiles","fileRef","useRef","handleFileChange","e","target","validationSchema","formData","FormData","file","append","date","Date","now","Object","entries","value","current","styleForm","autoComplete","msg","File","label","onChange","multiple","marginRight","marginLeft","login","credentials","loginUser","username","password","loginService","window","localStorage","setItem","JSON","stringify","userReducer","fetchUsers","usersReducer","users","UserList","Table","striped","to","padding","margins","margin","location","useLocation","handleLogOut","event","removeItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Link","User","LoginForm","onFormSubmit","marginTop","isSubmitting","signUp","SignupSchema","max","confirmPassword","validatePasswords","errors","SignUpForm","validate","signUpService","newUser","dayjs","extend","relativeTime","BlogList","sortBy","sortByNewest","sort","b","sortBlogs","Badge","renderUserLink","fromNow","SortButton","showSortButton","setSortBy","DropdownButton","Dropdown","App","match","useRouteMatch","matchBlog","individualUser","find","params","individualBlog","blogFormRef","useEffect","loggedUserJSON","getItem","parse","userFromToken","usersService","onFormCancle","Container","flex","path","exact","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","href","rel","color","document","getElementById"],"mappings":"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","file":"static/js/main.72fc8cfe.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nconst Comments = ({ blog }) => {\r\n  if (!blog.comments) {\r\n    return null\r\n  }\r\n  return (\r\n    <>\r\n      <ListGroup>\r\n        {blog.comments.map((comment) => (\r\n          <ListGroup.Item key={comment}>\r\n            <ReactMarkdown>{comment}</ReactMarkdown>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/blogs\"\r\nconst userUrl = \"/api/users\"\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\n// send request to api/user/id\r\n// get all blogs corresponding to current user\r\nconst getAllFromUser = async (userId) => {\r\n  const response = await axios.get(`${userUrl}/${userId}`)\r\n  console.log(response.data.blogs)\r\n  return response.data.blogs\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token, \"Content-Type\": \"multipart/form-data\" },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${newObject.id}`, config)\r\n  return response\r\n}\r\n\r\nconst updateLikes = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.id}`,\r\n    newObject,\r\n    config\r\n  )\r\n  return response.data\r\n}\r\n\r\nconst updateComments = async (comment, blogObject) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {\r\n    comment,\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getAllFromUser,\r\n  setToken,\r\n  create,\r\n  updateLikes,\r\n  deleteBlog,\r\n  updateComments,\r\n}\r\n","const notificationReducer = (\r\n  state = { messageBody: \"\", messageType: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"success\" }\r\n    case \"FAIL_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"warning\" }\r\n    case \"INFO_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"info\" }\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { messageBody: \"\", messageType: \"\" }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (message) => {\r\n  return {\r\n    type: \"FAIL_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const successMessage = (message) => {\r\n  return {\r\n    type: \"SUCCESS_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const infoMessage = (message) => {\r\n  return {\r\n    type: \"INFO_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import blogService from \"../services/blogs\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data.blogs\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data.newBlog]\r\n    case \"LIKE_BLOG\":\r\n      const updatedBlog = action.data.updatedBlog\r\n      const id = updatedBlog.id\r\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\r\n    case \"COMMENT_BLOG\":\r\n      const updatedBlogComment = action.data.updatedBlog\r\n      return state.map((blog) =>\r\n        blog.id !== updatedBlogComment.id ? blog : updatedBlogComment\r\n      )\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data.id)\r\n    case \"CLEAR_BLOGS\":\r\n      return []\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const commentBlog = (blogObject, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateComments(blogObject, comment)\r\n    dispatch({\r\n      type: \"COMMENT_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newBlog = await blogService.create(blogObject)\r\n      dispatch({\r\n        type: \"NEW_BLOG\",\r\n        data: { newBlog },\r\n      })\r\n      dispatch(\r\n        successMessage(\r\n          `a new blog ${newBlog.title} by ${newBlog.author} created`\r\n        )\r\n      )\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`Error creating a new blog ${exception}`))\r\n    }\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedBlog = await blogService.updateLikes(blogObject)\r\n      dispatch({\r\n        type: \"LIKE_BLOG\",\r\n        data: { updatedBlog },\r\n      })\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error updating the vlog, error:${exception}`))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await blogService.deleteBlog(blogObject)\r\n      dispatch(successMessage(`The blog ${blogObject.title} has been deleted.`))\r\n      dispatch({\r\n        type: \"DELETE_BLOG\",\r\n        data: { id: blogObject.id },\r\n      })\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`error deleting the vlog, error: ${exception}`))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: { blogs },\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearBlogs = () => {\r\n  return {\r\n    type: \"CLEAR_BLOGS\",\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import React from \"react\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { Formik, Field, Form } from \"formik\"\r\nimport { useSelector } from \"react-redux\"\r\nconst CommentForm = ({ addComment }) => {\r\n  const user = useSelector((state) => state.user)\r\n  return (\r\n    <Formik\r\n      initialValues={{ comment: \"\" }}\r\n      onSubmit={(values, { resetForm, setSubmitting }) => {\r\n        setSubmitting(true)\r\n        addComment(values.comment)\r\n        resetForm({ values: { comment: \"\" } })\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n          <styleForm.Group>\r\n            <styleForm.Label>{`Comment as ${user.name}`}:</styleForm.Label>\r\n            <Field name='comment'>\r\n              {({ field }) => (\r\n                <styleForm.Control\r\n                  as='textarea'\r\n                  rows={4}\r\n                  {...field}\r\n                  placeholder='What are your thoughts?'\r\n                ></styleForm.Control>\r\n              )}\r\n            </Field>\r\n            <styleForm.Text className='text-muted'>\r\n              Please follow the community's rule! This application supports\r\n              markdown syntax, try it out!\r\n            </styleForm.Text>\r\n          </styleForm.Group>\r\n          <Button type='submit' id='create-comment'>\r\n            COMMENT\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React, { useState } from \"react\"\r\nimport Comments from \"./Comments\"\r\nimport { commentBlog } from \"../reducers/blogReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport CommentForm from \"./CommentForm\"\r\nimport { Button, Card, Carousel, Modal, Alert } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { deleteBlog, likeBlog } from \"../reducers/blogReducer\"\r\nconst Blog = ({ blog, user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const handleClose = () => setShowModal(false)\r\n  const handleShow = () => setShowModal(true)\r\n\r\n  if (!user) {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const onLikesClick = () => {\r\n    dispatch(likeBlog(blog))\r\n  }\r\n\r\n  const removeBlog = () => {\r\n    dispatch(deleteBlog(blog))\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const displayModal = () => {\r\n    return (\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title as='h4'>{`Delete`}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Alert variant='danger'>\r\n            Do you want to delete this blog? This process cannot be undone.\r\n          </Alert>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            No! I'm backing off now!\r\n          </Button>\r\n          <Button variant='danger' onClick={removeBlog}>\r\n            Yes Sir!\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(commentBlog(comment, blog))\r\n  }\r\n\r\n  const showRemove = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button\r\n            variant='danger'\r\n            onClick={handleShow}\r\n            className='delete-button'\r\n          >\r\n            DELETE\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const renderCarousel = () => {\r\n    if (blog.images.length !== 0) {\r\n      return (\r\n        <Carousel\r\n          indicators={false}\r\n          interval={3000}\r\n          controls={blog.images.length === 1 ? false : true}\r\n        >\r\n          {blog.images.map((img) => (\r\n            <Carousel.Item key={img.url}>\r\n              <img\r\n                className='d-block w-100'\r\n                style={{ maxHeight: \"25rem\", objectFit: \"contain\" }}\r\n                src={img.thumbnail}\r\n                alt={img.filename}\r\n              />\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const blogDetail = () => {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Header>{blog.title}</Card.Header>\r\n          <Card.Body>\r\n            <ReactMarkdown>{blog.content}</ReactMarkdown>\r\n          </Card.Body>\r\n          <Card.Body>{renderCarousel()}</Card.Body>\r\n          <Card.Body>\r\n            <Card.Text>\r\n              {blog.likes} likes{\" \"}\r\n              <Button\r\n                variant='outline-success'\r\n                onClick={onLikesClick}\r\n                className='likeButton'\r\n              >\r\n                LIKE\r\n              </Button>\r\n              {showRemove()}\r\n            </Card.Text>\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <CommentForm blog={blog} addComment={addComment} />\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <Comments blog={blog} />\r\n          </Card.Body>\r\n        </Card>\r\n        {displayModal()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return blogDetail()\r\n}\r\n\r\nexport default Blog\r\n","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nconst Notification = () => {\r\n  const { messageBody, messageStyle } = useSelector(\r\n    (state) => state.notification\r\n  )\r\n\r\n  if (messageBody === \"\") {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Alert key={messageBody} variant={messageStyle}>\r\n      {messageBody}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  // visible = true: then show the form\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    props.setShowSortButton(visible)\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n      visible,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility} id='showForm'>\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>{props.children}</div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","/* eslint-disable indent */\r\nimport React, { useState, useRef } from \"react\"\r\nimport { Button, Form as styleForm, Alert } from \"react-bootstrap\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createBlog } from \"../reducers/blogReducer\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst NewBlogSchema = Yup.object().shape({\r\n  title: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  author: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  url: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n  content: Yup.string().min(8, \"Too Short!\").required(\"Required\"),\r\n})\r\n\r\nconst BlogForm = ({ toggleForm }) => {\r\n  const dispatch = useDispatch()\r\n  const [files, setFiles] = useState(null)\r\n  const fileRef = useRef(null)\r\n  const handleFileChange = (e) => {\r\n    setFiles(e.target.files)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Alert variant='primary'>\r\n        <h2>CREATE</h2>\r\n      </Alert>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          title: \"\",\r\n          author: \"\",\r\n          url: \"\",\r\n          content: \"\",\r\n        }}\r\n        validationSchema={NewBlogSchema}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          setSubmitting(true)\r\n\r\n          const formData = new FormData()\r\n          for (const file in files) {\r\n            formData.append(\"files\", files[file])\r\n          }\r\n\r\n          const newBlog = {\r\n            title: values.title,\r\n            author: values.author,\r\n            url: values.url,\r\n            content: values.content,\r\n            date: Date.now(),\r\n          }\r\n\r\n          for (const [key, value] of Object.entries(newBlog)) {\r\n            formData.append(key, value)\r\n          }\r\n\r\n          dispatch(createBlog(formData))\r\n          setSubmitting(false)\r\n          setFiles(null)\r\n          fileRef.current.value = \"\"\r\n          resetForm({\r\n            values: {\r\n              title: \"\",\r\n              author: \"\",\r\n              url: \"\",\r\n              content: \"\",\r\n            },\r\n          })\r\n          toggleForm()\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Title:</styleForm.Label>\r\n              <Field\r\n                name='title'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='title'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Author:</styleForm.Label>\r\n              <Field\r\n                name='author'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='author'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Url:</styleForm.Label>\r\n              <Field\r\n                name='url'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='url'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Content:</styleForm.Label>\r\n              <Field name='content'>\r\n                {({ field }) => (\r\n                  <styleForm.Control\r\n                    as='textarea'\r\n                    rows={4}\r\n                    {...field}\r\n                  ></styleForm.Control>\r\n                )}\r\n              </Field>\r\n              <ErrorMessage name='content'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.File\r\n                id='image'\r\n                label='Upload images'\r\n                onChange={handleFileChange}\r\n                ref={fileRef}\r\n                multiple\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                variant='secondary'\r\n                id='cancel-button'\r\n                onClick={toggleForm}\r\n                style={{ marginRight: \"auto\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant='primary'\r\n                id='create-button'\r\n                type='submit'\r\n                style={{ marginLeft: \"auto\" }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport { initializeBlogs } from \"./blogReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nfunction userReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return action.data.user\r\n    case \"TOKEN_USER\":\r\n      return action.data.user\r\n    case \"SIGNOUT\":\r\n      return null\r\n    case \"FAIL\":\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: \"SUCCESS\",\r\n        data: { user },\r\n      })\r\n      dispatch(successMessage(`User ${user.username} logged in`))\r\n      dispatch(initializeBlogs())\r\n    } catch (exception) {\r\n      dispatch({ type: \"FAIL\" })\r\n      dispatch(errorMessage(\"Wrong username or password\"))\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 2000)\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"SIGNOUT\",\r\n  }\r\n}\r\n\r\nexport const userFromToken = (user) => {\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: \"TOKEN_USER\",\r\n    data: { user },\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { fetchUsers }\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.data.users\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.fetchUsers()\r\n    dispatch({\r\n      type: \"FETCH_ALL\",\r\n      data: { users },\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nconst UserList = () => {\r\n  const users = useSelector((state) => state.users)\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <tr key={user.id}>\r\n        <td>\r\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n        </td>\r\n\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Number of blogs posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderUsers()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\"\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { clearBlogs } from \"../reducers/blogReducer\"\r\nimport { logoutUser } from \"../reducers/userReducer\"\r\nimport { clearMessage, infoMessage } from \"../reducers/notificationReducer\"\r\nconst padding = {\r\n  padding: 5,\r\n}\r\n\r\nconst margins = {\r\n  margin: 5,\r\n}\r\n\r\nconst Header = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogOut = async (event) => {\r\n    const name = user.name\r\n    window.localStorage.removeItem(\"loggedBlogUser\")\r\n    history.push(\"/\")\r\n    dispatch(logoutUser())\r\n    dispatch(clearBlogs())\r\n    dispatch(infoMessage(`User ${name} logged out`))\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 3000)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Navbar collapseOnSelect expand='lg' bg='light'>\r\n        <Navbar.Brand>\r\n          <Link style={padding} to='/'>\r\n            Hang's Blog App\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav className='mr-auto'></Nav>\r\n\r\n          {location.pathname === \"/signup\" ? (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Sign in\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/signup'>\r\n                Sign up\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n\r\n  const renderLoginMessage = () => {\r\n    return (\r\n      <Navbar.Text>\r\n        Hi, {user.name}\r\n        <Button variant='secondary' style={margins} onClick={handleLogOut}>\r\n          Sign out\r\n        </Button>\r\n      </Navbar.Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand='lg' bg='light'>\r\n      <Navbar.Brand>\r\n        <Link style={padding} to='/'>\r\n          Hang's Blog App\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n      <Navbar.Collapse id='responsive-navbar-nav'>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link as={Link} to='/'>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to='/users'>\r\n            Users\r\n          </Nav.Link>\r\n        </Nav>\r\n\r\n        <Nav className='justify-content-end'> {renderLoginMessage()}</Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h3>added blogs</h3>\r\n      {user.blogs.map((blog) => {\r\n        return <li key={blog.id}>{blog.title}</li>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { loginUser } from \"../reducers/userReducer\"\r\nimport { Formik, Field, Form } from \"formik\"\r\n\r\nconst LoginForm = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmit = async (values, { resetForm, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    dispatch(loginUser(values.username, values.password))\r\n    setSubmitting(false)\r\n    if (user === null) {\r\n      resetForm({ values: { username: values.username, password: \"\" } })\r\n    } else {\r\n      resetForm({ values: { username: \"\", password: \"\" } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ values, isSubmitting }) => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field name='username' type='input' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field name='password' type='password' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Sign in\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }\r\n","import React from \"react\"\r\nimport signUpService from \"../services/signup\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { Form as styleForm, Button, Alert } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport * as Yup from \"yup\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"../reducers/notificationReducer\"\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  username: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n})\r\n\r\nconst validatePasswords = (values) => {\r\n  const errors = {}\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = \"Must be the same as password above\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validate={validatePasswords}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n          if (values.password === values.confirmPassword) {\r\n            try {\r\n              setSubmitting(true)\r\n              const newUser = await signUpService.signUp({\r\n                name: values.name,\r\n                username: values.username,\r\n                password: values.password,\r\n              })\r\n              dispatch(successMessage(`New user ${newUser.name} signed up`))\r\n              setTimeout(() => {\r\n                dispatch(clearMessage())\r\n              }, 3000)\r\n              setSubmitting(false)\r\n              resetForm({\r\n                values: {\r\n                  name: \"\",\r\n                  username: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\",\r\n                },\r\n              })\r\n              history.push(\"/\")\r\n            } catch (err) {\r\n              dispatch(errorMessage(err))\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Full Name:</styleForm.Label>\r\n              <Field\r\n                name='name'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='name'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field\r\n                name='username'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n\r\n              <ErrorMessage name='username'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field\r\n                name='password'\r\n                type='password'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='password'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Confirm Password:</styleForm.Label>\r\n              <Field\r\n                type='password'\r\n                name='confirmPassword'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='confirmPassword'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n            <Button variant='primary' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\nimport { Table, Badge } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\ndayjs.extend(relativeTime)\r\n\r\nconst BlogList = ({ sortBy }) => {\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  const renderUserLink = ({ user }) => {\r\n    return <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n  }\r\n\r\n  const sortByMostLikes = () => {\r\n    return blogs.sort((a, b) => b.likes - a.likes)\r\n  }\r\n\r\n  const sortByLeastLikes = () => {\r\n    return blogs.sort((a, b) => a.likes - b.likes)\r\n  }\r\n\r\n  const sortByOldest = () => {\r\n    return blogs.sort((a, b) => a.date - b.date)\r\n  }\r\n\r\n  const sortByNewest = () => {\r\n    return blogs.sort((a, b) => b.date - a.date)\r\n  }\r\n\r\n  const renderTableData = (sortedBlogs) => {\r\n    return sortedBlogs.map((blog) => (\r\n      <tr key={blog.id}>\r\n        <td>\r\n          <Badge variant='light'>{blog.likes} LIKES</Badge>\r\n        </td>\r\n        <td>\r\n          <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n        </td>\r\n\r\n        <td>\r\n          Posted by {renderUserLink(blog)}\r\n          {` ${dayjs(blog.date).fromNow()}`}\r\n        </td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  const sortBlogs = () => {\r\n    switch (sortBy) {\r\n      case \"NEWEST_OLDEST\":\r\n        return sortByNewest()\r\n      case \"OLDEST_NEWEST\":\r\n        return sortByOldest()\r\n      case \"LEAST_MOST_LIKES\":\r\n        return sortByLeastLikes()\r\n      case \"MOST_LEAST_LIKES\":\r\n        return sortByMostLikes()\r\n      default:\r\n        return sortByNewest()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table striped>\r\n        <tbody>{renderTableData(sortBlogs())}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n","import React from \"react\"\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\"\r\nimport \"../index.css\"\r\nconst SortButton = ({ showSortButton, setSortBy }) => {\r\n  return (\r\n    <div className={showSortButton === true ? \"displaySortButton\" : \"hide\"}>\r\n      <DropdownButton id='dropdown-basic-button' title='SORT BY' variant='dark'>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"NEWEST_OLDEST\")\r\n          }}\r\n        >\r\n          Newest to Oldest\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"OLDEST_NEWEST\")\r\n          }}\r\n        >\r\n          Oldest to Newest\r\n        </Dropdown.Item>\r\n\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"LEAST_MOST_LIKES\")\r\n          }}\r\n        >\r\n          Least Likes to Most Likes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSortBy(\"MOST_LEAST_LIKES\")\r\n          }}\r\n        >\r\n          Most Likes to Least Likes\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortButton\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport Notification from \"./components/Notification\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { initializeBlogs } from \"./reducers/blogReducer\"\r\n\r\nimport { userFromToken } from \"./reducers/userReducer\"\r\nimport { fetchAllUsers } from \"./reducers/usersReducer\"\r\n\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\"\r\nimport UserList from \"./components/UserList\"\r\nimport Header from \"./components/Header\"\r\nimport User from \"./components/User\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport SignUpForm from \"./components/SignUpForm\"\r\nimport BlogList from \"./components/BlogList\"\r\nimport SortButon from \"./components/SortButton\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport \"./index.css\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\n\r\ndayjs.extend(relativeTime)\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const user = useSelector((state) => state.user)\r\n  const users = useSelector((state) => state.users)\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const matchBlog = useRouteMatch(\"/blogs/:id\")\r\n  const individualUser = match\r\n    ? users.find((user) => user.id === match.params.id)\r\n    : null\r\n  const individualBlog = matchBlog\r\n    ? blogs.find((blog) => blog.id === matchBlog.params.id)\r\n    : null\r\n\r\n  const blogFormRef = useRef()\r\n  const [showSortButton, setShowSortButton] = useState(true)\r\n  const [sortBy, setSortBy] = useState(\"NEW\")\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(userFromToken(user))\r\n      dispatch(initializeBlogs())\r\n      dispatch(fetchAllUsers())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const onFormCancle = () => {\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable\r\n      buttonLabel='CREATE POST'\r\n      className='newBlogToggle'\r\n      ref={blogFormRef}\r\n      setShowSortButton={setShowSortButton}\r\n    >\r\n      <div>\r\n        <BlogForm toggleForm={onFormCancle} />\r\n      </div>\r\n    </Togglable>\r\n  )\r\n\r\n  const showAllBlogs = () => (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <div className={showSortButton === true ? \"showFlexButtons\" : \"\"}>\r\n        <SortButon showSortButton={showSortButton} setSortBy={setSortBy} />\r\n        {blogForm()}\r\n      </div>\r\n      <BlogList sortBy={sortBy} />\r\n    </div>\r\n  )\r\n\r\n  const renderUserList = () => (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserPanel = () => (\r\n    <div>\r\n      <User user={individualUser} />\r\n    </div>\r\n  )\r\n\r\n  const renderSingleBlog = () => (\r\n    <div>\r\n      <Blog blog={individualBlog} user={user} />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className='content'>\r\n      <Header />\r\n      <Container style={{ flex: \"1 0 auto\" }}>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path='/users/:id'>{renderUserPanel()}</Route>\r\n\r\n          <Route exact path='/users'>\r\n            {renderUserList()}\r\n          </Route>\r\n\r\n          <Route path='/blogs/:id'>{renderSingleBlog()}</Route>\r\n          <Route path='/signup'>\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            {user === null ? <LoginForm /> : showAllBlogs()}\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport Footer from \"./components/Footer\"\r\nReactDOM.render(\r\n  [\r\n    <Provider store={store} key='1'>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>,\r\n    <Footer key='2' />,\r\n  ],\r\n  document.getElementById(\"root\")\r\n)\r\n","import React from \"react\"\r\nimport \"../index.css\"\r\nexport default function Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <a\r\n        href='https://github.com/HangCcZ'\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        style={{ color: \"inherit\" }}\r\n      >\r\n        App developed by Hang Chen\r\n      </a>\r\n    </footer>\r\n  )\r\n}\r\n"],"sourceRoot":""}