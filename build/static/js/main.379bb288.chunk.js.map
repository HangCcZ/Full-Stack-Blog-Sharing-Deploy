{"version":3,"sources":["components/Comments.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","services/login.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/Header.js","components/User.js","components/LoginForm.js","services/signup.js","components/SignUpForm.js","components/BlogList.js","App.js","store.js","index.js","components/Footer.js"],"names":["Comments","blog","comments","ListGroup","map","comment","Item","key","baseUrl","token","getAll","a","axios","get","response","data","getAllFromUser","userId","console","log","blogs","create","newObject","config","headers","Authorization","post","deleteBlog","delete","id","setToken","newToken","updateLikes","put","updateComments","blogObject","errorMessage","message","type","successMessage","notificationReducer","state","messageBody","messageType","action","messageStyle","initializeBlogs","dispatch","blogService","blogReducer","newBlog","updatedBlog","updatedBlogComment","filter","CommentForm","addComment","user","useSelector","initialValues","onSubmit","values","resetForm","setSubmitting","Group","Label","name","field","Control","as","rows","placeholder","Text","className","Button","Blog","useDispatch","history","useHistory","push","onLikesClick","exception","setTimeout","onRemoveClick","window","confirm","title","author","commentBlog","Card","Header","Body","content","likes","variant","onClick","Notification","notification","Alert","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","marginLeft","buttonLabel","children","BlogForm","toggleForm","url","date","Date","now","styleForm","autoComplete","marginRight","login","credentials","loginUser","username","password","loginService","localStorage","setItem","JSON","stringify","userReducer","fetchUsers","usersReducer","users","UserList","Table","striped","to","length","padding","margins","margin","location","useLocation","handleLogOut","event","removeItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Link","User","LoginForm","onFormSubmit","marginTop","isSubmitting","signUp","SignupSchema","Yup","shape","min","max","required","confirmPassword","validatePasswords","errors","SignUpForm","validate","validationSchema","signUpService","newUser","msg","dayjs","extend","relativeTime","BlogList","sort","b","renderUserLink","from","App","match","useRouteMatch","matchBlog","individualUser","find","params","individualBlog","blogFormRef","useRef","useEffect","loggedUserJSON","getItem","parse","userFromToken","usersService","onFormCancle","current","Container","flex","path","exact","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","href","target","rel","color","document","getElementById"],"mappings":"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","file":"static/js/main.379bb288.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nconst Comments = ({ blog }) => {\r\n  if (!blog.comments) {\r\n    return null\r\n  }\r\n  return (\r\n    <>\r\n      <ListGroup>\r\n        {blog.comments.map((comment) => (\r\n          <ListGroup.Item key={comment}>\r\n            <ReactMarkdown>{comment}</ReactMarkdown>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/blogs\"\r\nconst userUrl = \"/api/users\"\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\n// send request to api/user/id\r\n// get all blogs corresponding to current user\r\nconst getAllFromUser = async (userId) => {\r\n  const response = await axios.get(`${userUrl}/${userId}`)\r\n  console.log(response.data.blogs)\r\n  return response.data.blogs\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${newObject.id}`, config)\r\n  return response\r\n}\r\n\r\nconst updateLikes = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.id}`,\r\n    newObject,\r\n    config\r\n  )\r\n  return response.data\r\n}\r\n\r\nconst updateComments = async (comment, blogObject) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {\r\n    comment,\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getAllFromUser,\r\n  setToken,\r\n  create,\r\n  updateLikes,\r\n  deleteBlog,\r\n  updateComments,\r\n}\r\n","const notificationReducer = (\r\n  state = { messageBody: \"\", messageType: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SUCCESS_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"success\" }\r\n    case \"FAIL_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"warning\" }\r\n    case \"INFO_NOTIFICATION\":\r\n      return { messageBody: action.data, messageStyle: \"info\" }\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { messageBody: \"\", messageType: \"\" }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (message) => {\r\n  return {\r\n    type: \"FAIL_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const successMessage = (message) => {\r\n  return {\r\n    type: \"SUCCESS_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const infoMessage = (message) => {\r\n  return {\r\n    type: \"INFO_NOTIFICATION\",\r\n    data: message,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: \"CLEAR_NOTIFICATION\",\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import blogService from \"../services/blogs\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data.blogs\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data.newBlog]\r\n    case \"LIKE_BLOG\":\r\n      const updatedBlog = action.data.updatedBlog\r\n      const id = updatedBlog.id\r\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\r\n    case \"COMMENT_BLOG\":\r\n      const updatedBlogComment = action.data.updatedBlog\r\n      return state.map((blog) =>\r\n        blog.id !== updatedBlogComment.id ? blog : updatedBlogComment\r\n      )\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data.id)\r\n    case \"CLEAR_BLOGS\":\r\n      return []\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const commentBlog = (blogObject, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateComments(blogObject, comment)\r\n    dispatch({\r\n      type: \"COMMENT_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newBlog = await blogService.create(blogObject)\r\n      dispatch({\r\n        type: \"NEW_BLOG\",\r\n        data: { newBlog },\r\n      })\r\n      dispatch(\r\n        successMessage(\r\n          `a new blog ${newBlog.title} by ${newBlog.author} created`\r\n        )\r\n      )\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    } catch (exception) {\r\n      dispatch(errorMessage(`Error creating a new blog ${exception}`))\r\n    }\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = await blogService.updateLikes(blogObject)\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: { updatedBlog },\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blogObject) => {\r\n  return async (dispatch) => {\r\n    await blogService.deleteBlog(blogObject)\r\n\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: { id: blogObject.id },\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: { blogs },\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearBlogs = () => {\r\n  return {\r\n    type: \"CLEAR_BLOGS\",\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import React from \"react\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { Formik, Field, Form } from \"formik\"\r\nimport { useSelector } from \"react-redux\"\r\nconst CommentForm = ({ addComment }) => {\r\n  const user = useSelector((state) => state.user)\r\n  return (\r\n    <Formik\r\n      initialValues={{ comment: \"\" }}\r\n      onSubmit={(values, { resetForm, setSubmitting }) => {\r\n        setSubmitting(true)\r\n        addComment(values.comment)\r\n        resetForm({ values: { comment: \"\" } })\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n          <styleForm.Group>\r\n            <styleForm.Label>{`Comment as ${user.name}`}:</styleForm.Label>\r\n            <Field name='comment'>\r\n              {({ field }) => (\r\n                <styleForm.Control\r\n                  as='textarea'\r\n                  rows={4}\r\n                  {...field}\r\n                  placeholder='What are your thoughts?'\r\n                ></styleForm.Control>\r\n              )}\r\n            </Field>\r\n            <styleForm.Text className='text-muted'>\r\n              Please follow the community's rule! This application supports\r\n              markdown syntax, try it out!\r\n            </styleForm.Text>\r\n          </styleForm.Group>\r\n          <Button type='submit' id='create-comment'>\r\n            COMMENT\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React from \"react\"\r\nimport Comments from \"./Comments\"\r\nimport { commentBlog } from \"../reducers/blogReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport CommentForm from \"./CommentForm\"\r\nimport { Button, Card } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { deleteBlog, likeBlog } from \"../reducers/blogReducer\"\r\nimport { errorMessage, clearMessage } from \"../reducers/notificationReducer\"\r\nconst Blog = ({ blog, user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  if (!user) {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const onLikesClick = () => {\r\n    console.log(`blog user id:`, blog.user.id)\r\n    console.log(`user id from state`, user.id)\r\n    try {\r\n      dispatch(likeBlog(blog))\r\n    } catch (exception) {\r\n      dispatch(errorMessage(\"error updating the vlog\"))\r\n      setTimeout(() => {\r\n        dispatch(clearMessage())\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const onRemoveClick = () => {\r\n    // add a confirmation component here\r\n    const result = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\r\n    if (result) {\r\n      try {\r\n        dispatch(deleteBlog(blog))\r\n        history.push(\"/\")\r\n      } catch (exception) {\r\n        dispatch(errorMessage(`error deleting the vlog, error: ${exception}`))\r\n        setTimeout(() => {\r\n          dispatch(clearMessage())\r\n        }, 3000)\r\n      }\r\n    }\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(commentBlog(comment, blog))\r\n  }\r\n\r\n  const showRemove = () => {\r\n    if (blog.user.id === user.id) {\r\n      return (\r\n        <>\r\n          <Button\r\n            variant='danger'\r\n            onClick={onRemoveClick}\r\n            className='delete-button'\r\n          >\r\n            REMOVE\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  const blogDetail = () => {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Header>{blog.title}</Card.Header>\r\n          <Card.Body>\r\n            <ReactMarkdown>{blog.content}</ReactMarkdown>\r\n\r\n            <Card.Text>\r\n              {blog.likes} likes{\" \"}\r\n              <Button\r\n                variant='outline-success'\r\n                onClick={onLikesClick}\r\n                className='likeButton'\r\n              >\r\n                LIKE\r\n              </Button>\r\n              {showRemove()}\r\n            </Card.Text>\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <CommentForm blog={blog} addComment={addComment} />\r\n          </Card.Body>\r\n\r\n          <Card.Body>\r\n            <Comments blog={blog} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return blogDetail()\r\n}\r\n\r\nexport default Blog\r\n","import React from \"react\"\r\nimport { Alert } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nconst Notification = () => {\r\n  const { messageBody, messageStyle } = useSelector(\r\n    (state) => state.notification\r\n  )\r\n\r\n  if (messageBody === \"\") {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Alert key={messageBody} variant={messageStyle}>\r\n      {messageBody}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  // visible = true: then show the form\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"flex\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button\r\n          onClick={toggleVisibility}\r\n          id='showForm'\r\n          style={{ marginLeft: \"auto\" }}\r\n        >\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>{props.children}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","/* eslint-disable indent */\r\nimport React from \"react\"\r\nimport { Button, Form as styleForm, Alert } from \"react-bootstrap\"\r\nimport { Formik, Field, Form } from \"formik\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createBlog } from \"../reducers/blogReducer\"\r\n\r\nconst BlogForm = ({ toggleForm }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <>\r\n      <Alert variant='primary'>\r\n        <h2>Create a new blog</h2>\r\n      </Alert>\r\n\r\n      <Formik\r\n        initialValues={{ title: \"\", author: \"\", url: \"\", content: \"\" }}\r\n        onSubmit={(values, { resetForm, setSubmitting }) => {\r\n          setSubmitting(true)\r\n          const newBlog = {\r\n            title: values.title,\r\n            author: values.author,\r\n            url: values.url,\r\n            content: values.content,\r\n            date: Date.now(),\r\n          }\r\n          dispatch(createBlog(newBlog))\r\n          setSubmitting(false)\r\n          resetForm({\r\n            values: {\r\n              title: \"\",\r\n              author: \"\",\r\n              url: \"\",\r\n              content: \"\",\r\n            },\r\n          })\r\n          toggleForm()\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Title:</styleForm.Label>\r\n              <Field\r\n                name='title'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Author:</styleForm.Label>\r\n              <Field\r\n                name='author'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Url:</styleForm.Label>\r\n              <Field\r\n                name='url'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Content:</styleForm.Label>\r\n              <Field name='content'>\r\n                {({ field }) => (\r\n                  <styleForm.Control\r\n                    as='textarea'\r\n                    rows={4}\r\n                    {...field}\r\n                  ></styleForm.Control>\r\n                )}\r\n              </Field>\r\n            </styleForm.Group>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                variant='secondary'\r\n                id='cancel-button'\r\n                onClick={toggleForm}\r\n                style={{ marginRight: \"auto\" }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant='primary'\r\n                id='create-button'\r\n                type='submit'\r\n                style={{ marginLeft: \"auto\" }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport { initializeBlogs } from \"./blogReducer\"\r\nimport {\r\n  errorMessage,\r\n  successMessage,\r\n  clearMessage,\r\n} from \"./notificationReducer\"\r\nfunction userReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case \"SUCCESS\":\r\n      return action.data.user\r\n    case \"TOKEN_USER\":\r\n      return action.data.user\r\n    case \"SIGNOUT\":\r\n      return null\r\n    case \"FAIL\":\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: \"SUCCESS\",\r\n        data: { user },\r\n      })\r\n      dispatch(successMessage(`User ${user.username} logged in`))\r\n      dispatch(initializeBlogs())\r\n    } catch (exception) {\r\n      dispatch({ type: \"FAIL\" })\r\n      dispatch(errorMessage(\"Wrong username or password\"))\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 2000)\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"SIGNOUT\",\r\n  }\r\n}\r\n\r\nexport const userFromToken = (user) => {\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: \"TOKEN_USER\",\r\n    data: { user },\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { fetchUsers }\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.data.users\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.fetchUsers()\r\n    dispatch({\r\n      type: \"FETCH_ALL\",\r\n      data: { users },\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nconst UserList = () => {\r\n  const users = useSelector((state) => state.users)\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <tr key={user.id}>\r\n        <td>\r\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n        </td>\r\n\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Number of blogs posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderUsers()}</tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\"\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { clearBlogs } from \"../reducers/blogReducer\"\r\nimport { logoutUser } from \"../reducers/userReducer\"\r\nimport { clearMessage, infoMessage } from \"../reducers/notificationReducer\"\r\nconst padding = {\r\n  padding: 5,\r\n}\r\n\r\nconst margins = {\r\n  margin: 5,\r\n}\r\n\r\nconst Header = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogOut = async (event) => {\r\n    const name = user.name\r\n    window.localStorage.removeItem(\"loggedBlogUser\")\r\n    history.push(\"/\")\r\n    dispatch(logoutUser())\r\n    dispatch(clearBlogs())\r\n    dispatch(infoMessage(`User ${name} logged out`))\r\n    setTimeout(() => {\r\n      dispatch(clearMessage())\r\n    }, 3000)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Navbar collapseOnSelect expand='lg' bg='light'>\r\n        <Navbar.Brand>\r\n          <Link style={padding} to='/'>\r\n            Hang's Blog App\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n        <Navbar.Collapse id='responsive-navbar-nav'>\r\n          <Nav className='mr-auto'></Nav>\r\n\r\n          {location.pathname === \"/signup\" ? (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Sign in\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className='justify-content-end'>\r\n              <Nav.Link as={Link} to='/signup'>\r\n                Sign up\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n\r\n  const renderLoginMessage = () => {\r\n    return (\r\n      <Navbar.Text>\r\n        Hi, {user.name}\r\n        <Button variant='secondary' style={margins} onClick={handleLogOut}>\r\n          Sign out\r\n        </Button>\r\n      </Navbar.Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand='lg' bg='light'>\r\n      <Navbar.Brand>\r\n        <Link style={padding} to='/'>\r\n          Hang's Blog App\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n      <Navbar.Collapse id='responsive-navbar-nav'>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link as={Link} to='/'>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to='/users'>\r\n            Users\r\n          </Nav.Link>\r\n        </Nav>\r\n\r\n        <Nav className='justify-content-end'> {renderLoginMessage()}</Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h3>added blogs</h3>\r\n      {user.blogs.map((blog) => {\r\n        return <li key={blog.id}>{blog.title}</li>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Form as styleForm, Button } from \"react-bootstrap\"\r\nimport { loginUser } from \"../reducers/userReducer\"\r\nimport { Formik, Field, Form } from \"formik\"\r\n\r\nconst LoginForm = () => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmit = async (values, { resetForm, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    dispatch(loginUser(values.username, values.password))\r\n    setSubmitting(false)\r\n    if (user === null) {\r\n      resetForm({ values: { username: values.username, password: \"\" } })\r\n    } else {\r\n      resetForm({ values: { username: \"\", password: \"\" } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ values, isSubmitting }) => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field name='username' type='input' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field name='password' type='password' as={styleForm.Control} />\r\n            </styleForm.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Sign in\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }\r\n","import React from \"react\"\r\nimport signUpService from \"../services/signup\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport { Form as styleForm, Button, Alert } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport * as Yup from \"yup\"\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n  clearMessage,\r\n} from \"../reducers/notificationReducer\"\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  username: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(15, \"Too Long\")\r\n    .required(\"Required\"),\r\n})\r\n\r\nconst validatePasswords = (values) => {\r\n  const errors = {}\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = \"Must be the same as password above\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validate={validatePasswords}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n          if (values.password === values.confirmPassword) {\r\n            try {\r\n              setSubmitting(true)\r\n              const newUser = await signUpService.signUp({\r\n                name: values.name,\r\n                username: values.username,\r\n                password: values.password,\r\n              })\r\n              dispatch(successMessage(`New user ${newUser.name} signed up`))\r\n              setTimeout(() => {\r\n                dispatch(clearMessage())\r\n              }, 3000)\r\n              setSubmitting(false)\r\n              resetForm({\r\n                values: {\r\n                  name: \"\",\r\n                  username: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\",\r\n                },\r\n              })\r\n              history.push(\"/\")\r\n            } catch (err) {\r\n              dispatch(errorMessage(err))\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <styleForm.Group>\r\n              <styleForm.Label>Full Name:</styleForm.Label>\r\n              <Field\r\n                name='name'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='name'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Username:</styleForm.Label>\r\n              <Field\r\n                name='username'\r\n                type='input'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n\r\n              <ErrorMessage name='username'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Password:</styleForm.Label>\r\n              <Field\r\n                name='password'\r\n                type='password'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='password'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n\r\n            <styleForm.Group>\r\n              <styleForm.Label>Confirm Password:</styleForm.Label>\r\n              <Field\r\n                type='password'\r\n                name='confirmPassword'\r\n                as={styleForm.Control}\r\n                autoComplete='off'\r\n              />\r\n              <ErrorMessage name='confirmPassword'>\r\n                {(msg) => <Alert variant='warning'>{msg}</Alert>}\r\n              </ErrorMessage>\r\n            </styleForm.Group>\r\n            <Button variant='primary' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\nimport { Table } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\ndayjs.extend(relativeTime)\r\n\r\nconst BlogList = () => {\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  const renderUserLink = ({ user }) => {\r\n    // const blogUser = users.find((user) => user.id === blogUserId)\r\n    return <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table striped>\r\n        <tbody>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog) => (\r\n              <tr key={blog.id}>\r\n                <td>\r\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                </td>\r\n\r\n                <td>\r\n                  Posted by {renderUserLink(blog)}\r\n                  {` ${dayjs().from(dayjs(blog.date), true)} ago`}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n","import React, { useEffect, useRef } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport Notification from \"./components/Notification\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { initializeBlogs } from \"./reducers/blogReducer\"\r\n\r\nimport { userFromToken } from \"./reducers/userReducer\"\r\nimport { fetchAllUsers } from \"./reducers/usersReducer\"\r\n\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\"\r\nimport UserList from \"./components/UserList\"\r\nimport Header from \"./components/Header\"\r\nimport User from \"./components/User\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport SignUpForm from \"./components/SignUpForm\"\r\nimport BlogList from \"./components/BlogList\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport \"./index.css\"\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"\r\n\r\ndayjs.extend(relativeTime)\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const user = useSelector((state) => state.user)\r\n  const users = useSelector((state) => state.users)\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const matchBlog = useRouteMatch(\"/blogs/:id\")\r\n  const individualUser = match\r\n    ? users.find((user) => user.id === match.params.id)\r\n    : null\r\n  const individualBlog = matchBlog\r\n    ? blogs.find((blog) => blog.id === matchBlog.params.id)\r\n    : null\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(userFromToken(user))\r\n      dispatch(initializeBlogs())\r\n      dispatch(fetchAllUsers())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const onFormCancle = () => {\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable\r\n      buttonLabel='Post a new blog'\r\n      className='newBlogToggle'\r\n      ref={blogFormRef}\r\n    >\r\n      <div>\r\n        <BlogForm toggleForm={onFormCancle} />\r\n      </div>\r\n    </Togglable>\r\n  )\r\n\r\n  const showUserBlogs = () => (\r\n    <div>\r\n      {blogForm()}\r\n      <BlogList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserList = () => (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n\r\n  const renderUserPanel = () => (\r\n    <div>\r\n      <User user={individualUser} />\r\n    </div>\r\n  )\r\n\r\n  const renderSingleBlog = () => (\r\n    <div>\r\n      <Blog blog={individualBlog} user={user} />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className='content'>\r\n      <Header />\r\n      <Container style={{ flex: \"1 0 auto\" }}>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path='/users/:id'>{renderUserPanel()}</Route>\r\n\r\n          <Route exact path='/users'>\r\n            {renderUserList()}\r\n          </Route>\r\n\r\n          <Route path='/blogs/:id'>{renderSingleBlog()}</Route>\r\n          <Route path='/signup'>\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            {user === null ? <LoginForm /> : showUserBlogs()}\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport Footer from \"./components/Footer\"\r\nReactDOM.render(\r\n  [\r\n    <Provider store={store} key='1'>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>,\r\n    <Footer key='2' />,\r\n  ],\r\n  document.getElementById(\"root\")\r\n)\r\n","import React from \"react\"\r\nimport \"../index.css\"\r\nexport default function Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <a\r\n        href='https://github.com/HangCcZ'\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        style={{ color: \"inherit\" }}\r\n      >\r\n        App developed by Hang Chen\r\n      </a>\r\n    </footer>\r\n  )\r\n}\r\n"],"sourceRoot":""}